;*****************************************************************************
;
; ROUTINE:	FLIP.EQU
;
; DESCRIPTION:	EQUATES FOR FLIP & FLOP
;
;*****************************************************************************

V.PATAD	EQU	0
V.NAMAD	EQU	01C00H
V.ATRAD	EQU	01F00H
V.COLAD	EQU	02000H
V.SPRAD	EQU	03800H

BLANKP	EQU	20H		;BLANK PATTERN, BLUE, IN CHARSET...
				;...NOTE: MUST BE LESS THAN NUMBAS!!...
NUMBAS	EQU	30H		;BASE OF DIGITS 0-9 IN CHARACTER SET
CHRBAS	EQU	'A'		;BASE OF CHARACTERS A-Z IN CHARACTER SET

P0SBASE	EQU	44		;BASE OF PLAYER 0 SPRITES
P1SBASE	EQU	48		;BASE OF PLAYER 1 SPRITES

LVSPN1	EQU	4		;SPRITE # OF LOW ORDER DIGIT OF BACKLIT LEVEL#
LVSPN2	EQU	5		;DITTO, HIGH ORDER DIGIT
LVLBAK	EQU	6		;SPRITE # OF LEVEL# BACKGROUND
LVLBORD	EQU	7		;SPRITE# OF BORDER ON LEFT SIDE OF LEVEL#
LADPAT	EQU	0F4H		;SPRITE PATTERN # OF INTERMISSIONS LADDER

PSLENGTH	EQU	120	;LENGTH OF PLAYER 0 PAUSE ON STICKY TILE
TIKRATE		EQU	30	;# OF INTERRUPTS BETWEEN SCREEN CLOCK TICKS
P0DLY		EQU	17	;PLAYER 0 MOVES ONCE EVERY 'P0DLY' INTERRUPTS
P1DLY		EQU	25	;PLAYER 1'S DELAY WHEN ON SAME PLATFORM AS PL0

;MUSIC FLAGS:
TIMLOW		EQU	1	;TIME LEFT TO PLAY IS 5 OR LESS

;OFFSETS TO PL0DAT & PL1DAT TABLES:
O_STATUS	EQU	0		;STATUS BYTE
O_CMD		EQU	1		;DIRECTION COMMAND
O_XMATRX	EQU	2		;MATRIX X COORD
O_YMATRX	EQU	3		;MATRIX Y COORD
O_ADDR		EQU	4		;MATRIX ADDRESS BASED ON X,YMATRX
O_XSCRN		EQU	6		;SCREEN X COORD, WORD VALUE
O_YSCRN		EQU	8		;SCREEN Y COORD, WORD VALUE
O_NTICKS	EQU	10		;# OF STEPS LEFT IN CURRENT JUMP
O_STICKS	EQU	11		;TOTAL # OF STEPS TO USE CURRENT SPRITES
O_NSTIKS	EQU	12		;# OF STEPS LEFT TO USE CURRENT SPRITES
O_POSPTR	EQU	13		;POINTER INTO POSITION OFFSETS TABLE
O_STGTBL	EQU	15		;POINTER INTO ANIMATION STAGE DATA
O_NSTAGS	EQU	17		;# OF STAGES OF ANIMATION LEFT THIS MOVE
O_LADR		EQU	18		;0 = TILE-TO-TILE JUMP, 1 = LADDER JUMP
O_PAUSE		EQU	19		;#SECONDS STUCK ON STICKY SQUARE
O_SPEED		EQU	20		;#TICKS BETWEEN MOVES


;BITS WITHIN STATUS BYTE:
B_ANIMAT	EQU	7	;ANIMATE BIT, 1=IN JUMP ANIMATION 
B_PLAYER	EQU	6	;0 = PLAYER 0, 1 = PLAYER 1
B_DOFALL	EQU	5	;JUST JUMPED INTO EMPTY AIR (ILLEGAL LADDER)
B_RANGE		EQU	4	;0 = PLAYER ON SCREEN, 1 = OUT OF RANGE

;TILE TYPES:
T_BLANK		EQU	0	;NON-EXISTENT
T_INITIAL	EQU	84H	;USED DURING BUILDING OF LOGDTA AS A T_PLAIN
T_PLAIN		EQU	4
T_POP		EQU	2	;TO BE POPPED (ONCE)
T_POP2		EQU	1	;TO BE POPPED A SECOND TIME
T_STICKY	EQU	9
T_RT_LADDER	EQU	6	;TOP OF LADDER FACING RIGHT
T_RB_LADDER	EQU	8	;BOTTOM   "       "     "
T_LT_LADDER	EQU	5	;TOP OF   "       "   LEFT
T_LB_LADDER	EQU	7	;BOTTOM   "       "     "

S_KAN1		EQU	0	;OFFSET INTO SOUND TABLE
S_KEE1		EQU	1	;TILE JUMP
S_MON1		EQU	2
S_NET1		EQU	3
S_KAN2		EQU	4	;LADDER JUMP
S_KEE2		EQU	5
S_MON2		EQU	6
S_NET2		EQU	7
S_STATUS	EQU	8	;STATUS SCREEN
S_ENDSNG	EQU	9	;'GAME OVER' SCREEN
S_DEMISE	EQU	10	;PL1 CAUGHT PL0
S_POP		EQU	11	;STICKY TIME UP, TIME COUNTUP/DOWN DONE
S_FALL		EQU	12
S_BOUNCE	EQU	13
S_BONUS		EQU	14	;BONUS AS TIME COUNTS DOWN
S_PUTSPC	EQU	15	;TIME COUNT-UP
S_PICKUP	EQU	16	;POPPING A TILE
S_WARNING	EQU	17	;TIME ABOUT TO RUN OUT

LOW_A		EQU	0	;REGISTER # FOR LOW ORDER BYTE OF CH.A TONE
HI_A		EQU	1
LOW_B		EQU	2
HI_B		EQU	3
LOW_C		EQU	4
HI_C		EQU	5
VOL_A		EQU	8	;VOLUME REGISTER FOR CHANNEL A
VOL_B		EQU	9
VOL_C		EQU	10

USE_A		EQU	1	;SET BIT 0 TO SAY THIS TUNE USES CHANNEL A
USE_B		EQU	2	;SET BIT 1 FOR CHANNEL B
USE_C		EQU	4	;SET BIT 2 FOR CHANNEL C
USE_AC		EQU	5
USE_BC		EQU	6
USE_ABC		EQU	7

L64		EQU	1	;1/64 NOTE'S DURATION (# OF INTERRUPTS)
L32		EQU	1	;1/32 NOTE'S DURATION (# OF INTERRUPTS)
L364		EQU	1	;3/64
L16		EQU	2	;1/16
L332		EQU	3	;3/32
L8		EQU	4	;1/8
L316		EQU	6	;3/16
L4		EQU	8	;1/4
L38		EQU	12	;3/8
L2		EQU	16	;1/2
L34		EQU	24	;3/4
L1		EQU	32	;WHOLE NOTE

PLAY		EQU	0	;VALUE OF HFLAG TO PLAY GAME
RSTART		EQU	1	;VALUE OF HFLAG TO RESTART GAME
HELP		EQU	2	;VALUE TO CALL HELP SCREENS
ENDSCR		EQU	3	;VALUE TO PUT UP STANDARD END SCREEN

;VALUES OF GAMFLG:	;NOTE - MUST BE IN NUMERICAL ORDER, STARTING WITH 1!!
PLYGAM		EQU	1	;..DO NOT BREAK THE ORDER WITHOUT AN 'M80ALL'
DODEMO		EQU	2
FELLOFF		EQU	3
GOTCOT		EQU	4
COMPLT		EQU	5
TIMGON		EQU	6
TRYAGN		EQU	7
NOTRIES		EQU	8
BLDNXT		EQU	9

HELPK		EQU	0EAH
RESTK1		EQU	0BDH
RESTK2		EQU	0ABH

LEFT		EQU	2	;PLAYER DIRECTIONS (TO MATCH JIM'S LOGIC)
BACK		EQU	1
RITE		EQU	0
FORWD		EQU	3
NOMOVE		EQU	4


NXOFF		EQU	-8	;X OFFSET TO PUT NET RIGHT ONTOP OF TILE
NYOFF		EQU	-5	;Y OFFSET
