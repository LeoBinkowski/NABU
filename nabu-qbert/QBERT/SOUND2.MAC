;THIS FILE CONTAINS SOUND2, DOSOUND
;*****************************************************************************
;
; ROUTINE:	SOUND2
;
; DESCRIPTION:	SETS POINTERS TO SOUND CHANNELS A,B,C (USED IN RTN DOSOUND).
;
; PARAMETERS INPUT: BC = ADDRESS OF SOUND DATA
;
;	THE FORMAT OF THE SOUND DATA IS DESCRIBED IN 'DOSOUND' BELOW. HOWEVER,
;	EACH SOUND/TUNE'S DATA IS PRECEDED BY ONE BYTE INDICATING THE CHANNEL
;	THAT SOUND IS MEANT FOR (IT CAN ONLY HANDLE ONE!). 
;
;*****************************************************************************
; CHANGE LOG:
; ----------
; 84-10-15  TMN  LOOSELY BASED ON GREG ADAM'S DIGDUG MUSIC CODE
;
;*****************************************************************************

	.Z80

	.XLIST
	INCLUDE COMMON.MRO
	INCLUDE STRUCT.MRO
	INCLUDE ARITH.MRO
	INCLUDE SOUND2.EQU
	.LIST

	EXTRN AUDWR,CRBEG,CREND
	EXTRN AUDRD

A_LENG:: DB	00H
B_LENG:: DB	00H
C_LENG:: DB	00H
A_PTR:: DW	00H
B_PTR:: DW	00H
C_PTR:: DW	00H
CHANLS:: DB	00H
POPFLG:: DB	00H
SOUND2::
	CALL	CRBEG		;PREVENT INTERRUPTS FROM CHANGING DATA BELOW!!

	LD	A,(BC)		;1ST BYTE SAYS WHICH CHANNELS SOUND USES
	INC	BC		;UPDATE POINTER
	LD	D,A		;BIT 0 = CH A, 1 = B, 2 = C
	LD	A,(CHANLS)	;SAYS WHICH CHANNELS ARE CURRENTLY IN USE
	OR	D
	LD	(CHANLS),A	;UPDATE IT

	RR	D
	JR	NC,NOTA		;BIT 0 NOT SET SO CHANNEL A NOT USED
	LD	(A_PTR),BC	;SET MUSIC POINTER FOR THIS CHANNEL
	ASIGN8.	(A_LENG),0	;SET LENGTH OF PRECEDING NOTE TO 0 SO'LL START NEW NOTE
	JR	EXIT

NOTA:	RR	D
	JR	NC,NOTB		;BIT 1 NOT SET SO CHANNEL B NOT USED
	LD	(B_PTR),BC	;SET MUSIC POINTER FOR THIS CHANNEL
	ASIGN8.	(B_LENG),0	;SET LENGTH OF PRECEDING NOTE TO 0 SO'LL START NEW NOTE
	JR	EXIT

NOTB:	LD	(C_PTR),BC	;SET MUSIC POINTER FOR THIS CHANNEL (MUST BE C)
	ASIGN8.	(C_LENG),0	;SET LENGTH OF PRECEDING NOTE TO 0 SO'LL START NEW NOTE

EXIT:	CALL	CREND		;ALLOW INTERRUPTS TO PROCEED AGAIN

	RET


;*****************************************************************************
;
; ROUTINE:	DOSOUND
;
; DESCRIPTION:	PLAYS THE SOUNDS INDICATED BY POINTERS A_PTR, B_PTR, C_PTR.
;		THESE HAVE BEEN PRESET BY RTN SOUND2 (ABOVE) WHENEVER A NEW
;		SOUND/TUNE IS TO BE PLAYED.
;
;		THE FORMAT OF EACH SOUND/TUNE'S DATA IS AS FOLLOWS:
;		- FIRST, A BYTE INDICATING WHICH CHANNEL THIS SOUND IS FOR
;		  (BIT 0 SET = A, 1=B, 2=C)
;		- THEN, FOR EVERY NOTE, THERE IS A BYTE REPRESENTING THE
;		  DURATION OF THE NOTE (#INTERRUPTS), AND A WORD REPRESENTING
;		  THE FREQUENCY OF THE NOTE
;		- LASTLY, THE SOUND/TUNE IS TERMINATED BY A SINGLE '0FFH' BYTE.
;
;		NOTE THAT 'SOUNDA' MUST BE CREATED, A TABLE OF THE ADDRESSES
;		OF ALL SOUND DATA, TO BE ACCESSED BY 'SOUND2' ABOVE.
;
;	I.E. SNG1_A: DB 1
;		     DB DURATION,HIGH_TONE
;		     DB DURATION,HIGH_TONE
;			...
;		     DB 0FFH
;
;	     SNG1_B: DB 2
;		     DB DURATION,LOW_TONE
;			...
;		     DB 0FFH
;
;	     SNG7_C: DB 4
;		     DB DURATION,TONE
;	             ...
;		     DB 0FFH
;
;	    SOUNDA:: DW SNG1_A,SNG1_B,SNG7_C
;
;	NOTE THAT THE AUDIO VOLUMES MUST BE PRESET AND ARE AT A FIXED VOLUME
;	(PAUSES MUST BE FILLED WITH FREQUENCY=0). SIMILARLY THE AUDIO STATUS
;	REGISTERS MUST BE PRESET TO INDICATE WHICH CHANNELS ARE FOR VOICE/TUNES
;	AND WHICH FOR NOISE.
;	(FLIP & FLOP'S 'SETLEV' SETS A,B,&C TO VOICE IF LEVEL IS ODD, ELSE
;	A,B TO NOISE AND C TO VOICE. THIS ALLOWS MITCH & NET JUMPS TO BE NOISE
;	AND NOT BE OVERWRITTEN BY ALL NON-JUMPING SOUNDS, WHICH ARE PUT ON C 
;	WHETHER LEVEL IS EVEN OR ODD.)
;
;*****************************************************************************
; CHANGE LOG:
; ----------
;
;******************************************************************************

DOSOUND::
	CALL	CRBEG		;PREVENT INTERRUPTS FROM CHANGING DATA BELOW!!

	LD	A,(CHANLS)	;BIT 0 = PLAY CH.A, 1 = B, 2 = C
	AND	A
	JP	Z,EXITD		;NOTHING TO PLAY SO EXIT

	RRA
	JR	NC,DO_CHB	;BIT 0 NOT SET SO DONT PLAY CH.A

;******* CHANNEL A LOGIC ******************************************************

	LD	A,(A_LENG)
	AND	A		;IF 0, LAST NOTE HAS FINISHED (OR NEW TUNE)
	JR	NZ,OLDA		;NZ SO CONTINUE PLAYING CURRENT NOTE
	LD	HL,(A_PTR)	;SET UP NEW NOTE...
	ASIGN8.	(A_LENG),(HL)	;1ST SET NEW NOTE'S DURATION

	CP	0FFH		;TUNE TERMINATOR
	JR	NZ,PLAYA
	LD	A,(CHANLS)
	AND	0FEH		;TUNE OVER, RESET BIT 0 TO SAY CHANNEL DEAD
	LD	(CHANLS),A
	PCALL	AUDWR,LOW_A,0	;TURN OFF LOW TONE OF CH.A
	PCALL	AUDWR,HI_A,0	;DITTO HI TONE
	JR	DO_CHB

PLAYA:	INC	HL		;POINT TO LOW BYTE OF FREQUENCY
	LD	E,(HL)
	LD	C,LOW_A
	CALL	AUDWR		;WRITE LOW BYTE OF FREQ TO SOUND GENERATOR
	INC	HL		;POINT TO HIGH BYTE OF FREQUENCY
	LD	E,(HL)
	LD	C,HI_A
	CALL	AUDWR		;WRITE HIGH BYTE TO SOUND GENERATOR

	LD	A,(HL)		;HIGH BYTE'S ALSO CONTAINS VOLUME IN..
	AND	0F0H		;..HIGH NIBBLE
	SRL	A		;MOVE IT INTO LOW NIBBLE
	SRL	A
	SRL	A
	SRL	A
	LD	E,A
	PCALL	AUDWR,VOL_A	;SET THE VOLUME

	INC	HL
	LD	(A_PTR),HL	;UPDATE POINTER TO NEXT NOTE'S DATA

OLDA:	DEC8.	(A_LENG)	;UPDATE DURATION COUNTER

;******* CHANNEL B LOGIC ******************************************************

DO_CHB:	LD	A,(CHANLS)
	RRA
	RRA
	JR	NC,DO_CHC	;BIT 1 NOT SET SO DON'T PLAY CHANNEL B

	LD	A,(B_LENG)
	AND	A		;IF 0, LAST NOTE HAS FINISHED (OR NEW TUNE)
	JR	NZ,OLDB		;NZ SO CONTINUE PLAYING CURRENT NOTE
	LD	HL,(B_PTR)	;SET UP NEW NOTE...
	ASIGN8.	(B_LENG),(HL)	;1ST SET NEW NOTE'S DURATION

	CP	0FFH		;TUNE TERMINATOR
	JR	NZ,PLAYB
	LD	A,(CHANLS)
	AND	11111101B	;TUNE OVER, RESET BIT 1 TO SAY CHANNEL DEAD
	LD	(CHANLS),A
	PCALL	AUDWR,LOW_B,0	;TURN OFF LOW TONE 
	PCALL	AUDWR,HI_B,0	;DITTO HI TONE
	JR	DO_CHC

PLAYB:	INC	HL		;POINT TO LOW BYTE OF FREQUENCY
	LD	E,(HL)
	LD	C,LOW_B
	CALL	AUDWR		;WRITE LOW BYTE OF FREQ TO SOUND GENERATOR
	INC	HL		;POINT TO HIGH BYTE OF FREQUENCY
	LD	E,(HL)
	LD	C,HI_B
	CALL	AUDWR		;WRITE HIGH BYTE TO SOUND GENERATOR

	LD	A,(HL)		;HIGH BYTE'S ALSO CONTAINS VOLUME IN..
	AND	0F0H		;..HIGH NIBBLE
	SRL	A		;MOVE IT INTO LOW NIBBLE
	SRL	A
	SRL	A
	SRL	A
	LD	E,A
	PCALL	AUDWR,VOL_B	;SET THE VOLUME

	INC	HL
	LD	(B_PTR),HL	;UPDATE POINTER TO NEXT NOTE'S DATA

OLDB:	DEC8.	(B_LENG)	;UPDATE DURATION COUNTER

;******* CHANNEL C LOGIC ******************************************************

DO_CHC:	LD	A,(CHANLS)	;IF BIT 2 SET, DO CHANNEL C, ELSE SKIP IT
	RRA
	RRA
	RRA
	JP	NC,EXITD

	LD	A,(C_LENG)
	AND	A		;IF 0, LAST NOTE HAS FINISHED (OR NEW TUNE)
	JP	NZ,OLDC		;NZ SO CONTINUE PLAYING AS SET UP

	LD	A,(POPFLG)	;IS THE SOUND THE 'CYMBAL' CRASHING? (I.E....
	AND	A		;..STICKY OVER, OR COUNTUP/DOWN OVER)
	JR	Z,NOTPOP	;NO, SO CH. C IS TONES
	PCALL	AUDRD,7		;YES, CHANGE FROM TONE-MAKING TO NOISE-MAKING
	AND	11011011B	;SET BIT 5 TO ENABLE CH.C NOISE
	LD	E,A
	PCALL	AUDWR,7
	PCALL	AUDWR,6,8	;ALSO INCREASE NOISE PERIOD TO MAKE LOUDER

NOTPOP:	LD	HL,(C_PTR)	;SET UP NEW NOTE...
	ASIGN8.	(C_LENG),(HL)	;1ST SET NEW NOTE'S DURATION

	CP	0FFH		;TUNE TERMINATOR
	JR	NZ,PLAYC
	LD	A,(CHANLS)
	AND	11111011B	;TUNE OVER, RESET BIT 2 TO SAY CHANNEL DEAD
	LD	(CHANLS),A
	PCALL	AUDWR,LOW_C,0	;TURN OFF LOW TONE OF CH.
	PCALL	AUDWR,HI_C,0	;DITTO HI TONE

	LD	A,(POPFLG)	;WAS THE SOUND THE STICKY-OVER 'CYMBAL' SOUND?
	AND	A
	JR	Z,NOPOP2	;NO, CONTINUE AS IS
	PCALL	AUDRD,7		;YES, TURN OFF NOISE ON CH.C (ONLY POP USES IT)
	OR	00100000B
	LD	E,A
	PCALL	AUDWR,7
	PCALL	AUDWR,6,2	;RESTORE QUIETER NOISE PERIOD ALSO
	ASIGN8.	(POPFLG),0	;RESET FLAG
NOPOP2:	JP	EXITD

PLAYC:	INC	HL		;POINT TO LOW BYTE OF FREQUENCY
	LD	E,(HL)
	LD	C,LOW_C
	CALL	AUDWR		;WRITE LOW BYTE OF FREQ TO SOUND GENERATOR
	INC	HL		;POINT TO HIGH BYTE OF FREQUENCY
	LD	E,(HL)
	LD	C,HI_C
	CALL	AUDWR		;WRITE HIGH BYTE TO SOUND GENERATOR

	LD	A,(HL)		;HIGH BYTE'S ALSO CONTAINS VOLUME IN..
	AND	0F0H		;..HIGH NIBBLE
	SRL	A		;MOVE IT INTO LOW NIBBLE
	SRL	A
	SRL	A
	SRL	A
	LD	E,A
	PCALL	AUDWR,VOL_C	;SET THE VOLUME

	INC	HL
	LD	(C_PTR),HL	;UPDATE POINTER TO NEXT NOTE'S DATA

OLDC:	DEC8.	(C_LENG)	;UPDATE DURATION COUNTER

;******************************************************************************

EXITD:	CALL	CREND		;ALLOW INTERRUPTS AGAIN

	RET




	END
