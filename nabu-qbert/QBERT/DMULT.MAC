		.Z80
		CSEG
		.RADIX	10
;
;	THE FOLLOWING SUBROUTINE PERFORMS A BINARY CODED DECIMAL
;	MULTIPLICATION.
;
;	PARAMETERS PASSED:
;
;	MULTIPLIER - IN VARIABLE MLTPLR
;	MULTIPLICAND - IN VARIABLE MLTCND
;	PRODUCT - IN VARIABLE PRODCT
;
;	WARNING!!!
;
;	NOTE THAT ALL VARIABLES ARE STORED IN BCD, HIGH DIGIT IN THE
;	UPPER NIBBLE, LOW ORDER BYTES FIRST.
;
DMULT::		XOR	A		;CLEAR HIGH BYTE OF MULTIPLICAND
		LD	(CARRYB),A	;UPPER BYTE USED IN MULTIPLICATION
;
		LD	BC,0003H	;COPY MULTIPLICAND INTO PRODUCT
		LD	DE,PRODCT	;THREE BYTE VALUE
		LD	HL,MLTCND
		LDIR
;
		XOR	A		;CLEAR CARRY FLAG
		LD	A,(MLTPLR)	;GET MULTIPLIER
		DEC	A		;BCD DECREMENT
		DAA
		JP	Z,ENDMLT	;FINISHED IF MULTIPLIER WAS 001H
;
		AND	00FH		;MASK OUT LOW DIGIT
		JP	Z,TENMLT	;IF ZERO THEN DO TEN'S MULTIPLICATION
		LD	B,A		;INTO B REGISTER
;
LOOP1A:		PUSH	BC		;SAVE LOW DIGIT
		CALL	ADDONE		;ADD MULTIPLICAND TO PRODUCT
		POP	BC		;RESTORE LOW DIGIT
		DJNZ	LOOP1A		;REPEAT ACCORDING TO LOW DIGIT
;
TENMLT:		XOR	A		;CLEAR ACCUMULATOR
		LD	HL,MLTPLR	;DIVIDE MULTIPLIER BY 10d
		RRD			;HIGH DIGIT IN LOWER NIBBLE
;
		LD	A,(MLTPLR)	;GET HIGH DIGIT OF MULTIPLIER
		AND	A		;ZERO?
		JP	Z,ENDMLT	;THEN FINISHED MULTIPLICATION
;
		XOR	A		;CLEAR ACCUMULATOR
		LD	HL,MLTCND	;SHIFT DIGITS OF MULTIPLICAND RIGHT
		RLD			;(MULTIPLY BY 10d)
		INC	HL		;(THREE BYTES TO SHIFT)
		RLD
		INC	HL
		RLD
;
		LD	A,(MLTPLR)	;GET HIGH DIGIT OF MULTIPLIER
		LD	B,A		;INTO B REG
;
LOOP1B:		PUSH	BC		;SAVE HIGH DIGIT
		CALL	ADDONE		;ADD TEN TIMES MULTIPLICAND TO
		POP	BC
		DJNZ	LOOP1B		;PRODUCT ACCORDING TO HIGH DIGIT
;
ENDMLT:		RET			;FINISHED
;
;	THE FOLLOWING SUBROUTINE ADDS THE CONTENTS OF THE MULTIPLICAND
;	TO THE PRODUCT. NOTE THAT THIS IS A BCD ADDITION.
;
ADDONE:		LD	DE,PRODCT	;DE POINTS TO ADDEND (LOW BYTE)
		LD	HL,MLTCND	;HL POINTS TO ADDEND (LOW BYTE)
		LD	BC,PRODCT	;STORE RESULT IN PRODUCT
;
		CALL	BCDADD		;ADD PRODUCT AND MULTIPLICAND
;
		RET
;
;	THE FOLLOWING SUBROUTINES PERFORM THREE BYTE BCD ADDITION OR 
;	SUBTRACTION. NOTE THAT THE NUMBERS SHOULD BE STORED
;	LOW BYTE FIRST.
;	
;	PARAMETERS PASSED:	FIRST OPERAND (DE)
;				SECOND OPERAND (HL)
;				RESULT STORED (BC)
;
BCDADD::	LD	A,003H		;PERFORM OPERATION ON 003H BYTES
		LD	(OPNUM),A	;STORE IN BYTE COUNTER VARIABLE
		XOR	A		;CLEAR CARRY FOR FIRST OPERATION
;
LOOP2A:		LD	A,(DE)		;GET BYTE OF FIRST OPERAND
		ADC	A,(HL)		;ADD BYTES OF SECOND OPERAND
		DAA			;(BCD ADDITION)
		LD	(BC),A		;STORE RESULT
;
		INC	BC		;INCREMENT ALL POINTERS
		INC	DE
		INC	HL
;
		LD	A,(OPNUM)	;DECREMENT BYTES COUNT
		DEC	A
		LD	(OPNUM),A
;
		JP	NZ,LOOP2A	;FINISHED IF ZERO
;
		RET
;
;
BCDSUB::	LD	A,003H		;PERFORM OPERATION ON 003H BYTES
		LD	(OPNUM),A	;STORE IN BYTE COUNTER VARIABLE
		XOR	A		;CLEAR CARRY FOR FIRST OPERATION
;
LOOP2B:		LD	A,(DE)		;GET BYTE OF FIRST OPERAND
		SBC	A,(HL)		;SUB BYTE OF SECOND OPERAND
		DAA			;(BCD SUBTRACTION)
		LD	(BC),A		;STORE RESULT
;
		INC	BC		;INCREMENT ALL POINTERS
		INC	DE
		INC	HL
;
		LD	A,(OPNUM)	;DECREMENT BYTES COUNT
		DEC	A
		LD	(OPNUM),A
;
		JP	NZ,LOOP2B	;FINISHED IF ZERO
;
		RET
;
;******************************
;
;	VARIABLES
;
;******************************
;
OPNUM:		DS	001H
;
MLTPLR::	DS	001H
MLTCND::	DS	002H
CARRYB:		DS	001H
PRODCT::	DS	003H
;
		END
