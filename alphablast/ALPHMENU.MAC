;
;	ALPHMENU.MAC 18 October 1982
;
;	Part of ALPHABLAST
;
;	John Allen
;	(c)1982 NABU
;
;
;	This program displays the title page
;	for ALPHABLAST then it puts up the first
;	page of the menu and displays instructions
;	if required. Before exiting it sets up the
;	video ram ready for the ALPHABLAST game.
;
;
	.Z80
;
;
	INCLUDE A:COMMON.MRO
	INCLUDE A:STRUCT.MRO
	INCLUDE A:NLINKTAB.EXA	;Link table to the IOS
;
;
	EXTRN	SCREEN,WAITFT,$MAIN
	EXTRN	TCHRST,PRTHLP
NABUSYS	EQU	8
;
;
;
;	LOAD VIDEO MEMORY WITH THE TITLE PAGE
;
START::
;
;
	LD	SP,STKEND
;
	PCALL NABUSYS,090H,LNKTB	;Set up link table to IOS
;
;
	PCALL	VSETG2		;GRAPHICS 2
	PCALL	VNAMEST,(V.PNT) ;PAT NAME TABLE
	PCALL	VCOLRST,(V.COL) ;COLOR TABLE AT 2000H
	PCALL	VPTRNST,(V.PGT)
	PCALL	VATRIST,(V.SNT) ;SPRITE NAME TABLE
	PCALL	VSPRIST,(V.SGT) ;SPRITE GEN TABLE
	SETCOLR BLACK,BLACK
;
;
;
;
;	Write the data to the screen
;	*** SCREEN is the intro title screen not
;	to be confused with screen.mac
	PCALL	VRAMLD,(LENGTH),SCREEN,(V.PGT)
;
	PCALL	CLKPRM,7,0	;TURN OFF CURSOR
;
	PCALL	VBLKOFF 	;AND DISPLAY IT
;
;
;
	LD	HL,TIME
	CALL	WAITFT		;WAIT FOR 2 SECS
;
	JP	RSTENT		;go to menu page
;
;
LENGTH: DW	4000H
TIME:	DW	2000D		;WAIT FOR 2 SECONDS
;
;
V.PNT:: DW	1C00H	;PATTERN NAME TABLE
V.COL:: DW	2000H	;COLOR TABLE
V.PGT:: DW	0000H	;PATTERN GENERATOR TABLE
V.SNT:: DW	1F00H	;SPRITE NAME TABLE
V.SGT:: DW	1800H	;SPRITE GENERATOR TABLE
;
;
;
STACK:: 			;THE STACK SPACE
	DS	512
STKEND::
;
;
;
;**********************************************************************
;
;
;	
		.RADIX 16
Z80		EQU 0FFH
;
		CSEG
;
;
		EXTRN PUTLOGO
;
		.RADIX 10
;
  ;DEFINE THE MESSAGE BLOCK
;
;			    |345678901234567890123456789|
MESG1:		DEFMSG 15,3,'ALPHABLAST'
MESG2:		DEFMSG 3,11,'READY TO GO? PRESS GO'
MESG3:		DEFMSG 3,13,'NEED HELP?   PRESS HELP'
MESG4:		DEFMSG 3,15,'NEW CHOICE?  PRESS EXIT'
MESG5:		DEFMSG 3,17,'START AGAIN? PRESS RESTART'
MESG6:		DEFMSG 3,22,'COPYRIGHT \ 1982'
MESG7:		DEFMSG 3,23,'NABU NETWORK CORP.       03'
;			    |345678901234567890123456789|
;
;
;NOW DEFINE A DATA STRUCTURE POINTING TO THE MESSAGE BLOCKS
;
DATA:		DW MESG1, MESG2, MESG3, MESG4, MESG5
		DW MESG6,MESG7
ENDATA:
;
;                           |                            |
;			    |345678901234567890123456789|
MHDR1:		DEFMSG 3, 0,'ALPHABLAST      PAGE 1 OF 6'
I1MSG1: 	DEFMSG 3, 2,'ALPHABLAST IS A WORD GAME'
I1MSG2: 	DEFMSG 3, 4,'FOR TWO PLAYERS. EACH PLAYER'
I1MSG3: 	DEFMSG 3, 6,'TRIES TO GUESS THE OTHER''S'
I1MSG4: 	DEFMSG 3, 8,'WORD BY FILLING IN LETTERS.'
I1MSG5: 	DEFMSG 3,10,'CHOOSE FROM 3 LEVELS:'
I1MSG6: 	DEFMSG 3,12,'IN LEVEL 1 LETTER POSITIONS'
I1MSG7: 	DEFMSG 3,14,'ARE SHOWN.'
I1MSG8: 	DEFMSG 3,16,'IN LEVEL 2 LETTER POSITIONS'
I1MSG9:         DEFMSG 3,18,'ARE SHOWN ONLY UP TO'
I1MS10:       	DEFMSG 3,20,'GUESSED LETTERS.'
;			    |345678901234567890123456789|

;
;			    |345678901234567890123456789|
PG1L23:		DEFMSG 3,23,'      LEAVE HELP? <GO>    ~'
PGNL23:		DEFMSG 3,23,'`     LEAVE HELP? <GO>    ~'
PGLL23:		DEFMSG 3,23,'`     LEAVE HELP? <GO>'
;
INST1:		DW MHDR1,I1MSG1,I1MSG2,I1MSG3,I1MSG4,I1MSG5
		DW I1MSG6,I1MSG7,I1MSG8,I1MSG9,I1MS10,PG1L23
ENDI1: 
;
;
;                           |                            |
;			    |345678901234567890123456789|
HDR2:           DEFMSG 3,0, 'ALPHABLAST      PAGE 2 OF 6'
I2MSG2:        	DEFMSG 3,2, 'IN LEVEL 3 LETTER POSITIONS'
I2MSG3:        	DEFMSG 3,4, 'ARE AGAIN SHOWN BUT PLAYERS'
I2MSG4:        	DEFMSG 3,6, 'ARE ASKED TO TYPE IN THEIR'
I2MSG5:		DEFMSG 3,8,'OWN WORD AND RETYPE IT TO'
I2MSG6:		DEFMSG 3,10,'VERIFY THE WORD.'
I2MSG7: 	DEFMSG 3,12,'SCORING:'
I2MSG8: 	DEFMSG 3,14,'POINTS ARE AWARDED WHEN A'
I2MSG9: 	DEFMSG 3,16,'PLAYER GUESSES THE ENTIRE'
I2MS10: 	DEFMSG 3,18,'WORD.'
;
INST2:          DW HDR2,I2MSG2,I2MSG3,I2MSG4,I2MSG5
                DW I2MSG6,I2MSG7,I2MSG8,I2MSG9,I2MS10,PGNL23
ENDI2:
;
;
;
;                           :                            : 
;			    |345678901234567890123456789|
HDR3:           DEFMSG 3,0, 'ALPHABLAST      PAGE 3 OF 6'
I3MSG1: 	DEFMSG 3, 2,'LETTERS HAVE DIFFERENT POINT'
I3MSG2: 	DEFMSG 3, 4,'VALUES:'
I3MSG3: 	DEFMSG 3, 6,'A,E,I,L,N,O,R,S,T,U-1 POINT'
I3MSG4: 	DEFMSG 3, 8,'B,C,D,F,G,H,M,P,V  -2 POINTS'
I3MSG5: 	DEFMSG 3,10,'K,W,Y              -3 POINTS'
I3MSG6:         DEFMSG 3,12,'J,Q,X,Z            -4 POINTS'
I3MSG7:         DEFMSG 3,14,'EACH PLAYER STARTS WITH 16'
I3MSG8:		DEFMSG 3,16,'BONUS POINTS AND LOSES 2'
I3MSG9:		DEFMSG 3,18,'POINTS FOR EACH WRONG GUESS.'

;
INST3:          DW HDR3,I3MSG1,I3MSG2,I3MSG3,I3MSG4,I3MSG5,I3MSG6
                DW I3MSG7,I3MSG8,I3MSG9,PGNL23
ENDI3:
;
;
;
;                           :                            : 
;			    |345678901234567890123456789|
HDR4:           DEFMSG 3,0, 'ALPHABLAST      PAGE 4 OF 6'
I4MSG1:         DEFMSG 3,2,'AFTER 8 WRONG GUESSES THE'
I4MSG2:		DEFMSG 3,4,'PLAYER EXPLODES!'
I4MSG3:         DEFMSG 3,6,'A PLAYER CAN USE A TURN TO'
I4MSG4:         DEFMSG 3,8,'BET ON KNOWING THE WORD.'
I4MSG5:         DEFMSG 3,10,'TYPE ? AND ADD THE MISSING'
I4MSG6:	 	DEFMSG 3,12,'LETTERS IN ORDER. IF YOU ARE'
I4MSG7:		DEFMSG 3,14,'WRONG, POINTS ARE LOST'
I4MSG8:		DEFMSG 3,16,'FOR THE LETTERS ALREADY'
I4MSG9:		DEFMSG 3,18,'PLACED, AND 2 BONUS POINTS'
I4MS10:		DEFMSG 3,20,'ARE LOST.' 
;
INST4:          DW HDR4,I4MSG1,I4MSG2,I4MSG3,I4MSG4,I4MSG5
                DW I4MSG6,I4MSG7,I4MSG8,I4MSG9,I4MS10,PGNL23
ENDI4:
;
;
;
;                           :                            : 
;			    |345678901234567890123456789|
HDR5:           DEFMSG 3, 0,'ALPHABLAST      PAGE 5 OF 6'
I5MSG1:         DEFMSG 3, 2,'IF THE WORD IS GUESSED ON  '
I5MSG2:         DEFMSG 3, 4,'THE FIRST BET, BONUS POINTS'
I5MSG3:		DEFMSG 3, 6,'AND POINTS FOR LETTERS '
I5MSG4:		DEFMSG 3, 8,'PLACED BEFORE THE BET ARE '
I5MSG5:		DEFMSG 3,10,'DOUBLED. IN LATER BETS ONLY'
I5MSG6:		DEFMSG 3,12,'THE POINTS FOR LETTERS '
I5MSG7:		DEFMSG 3,14,'ALREADY PLACED ARE DOUBLED.'
;
INST5:          DW HDR5,I5MSG1,I5MSG2,I5MSG3,I5MSG4,I5MSG5
                DW I5MSG6,I5MSG7,PGNL23
ENDI5:
;
;
;
;                           |                            |
;			    |345678901234567890123456789|
HDR6:           DEFMSG 3,0, 'ALPHABLAST      PAGE 6 OF 6'
I6MSG1:		DEFMSG 3,2,'WHEN A PLAYER BLOWS UP, WITH'
I6MSG2: 	DEFMSG 3,4,'NEITHER WORD COMPLETED, THE'
I6MSG3: 	DEFMSG 3,6,'OTHER PLAYER CAN STOP AND'
I6MSG4:         DEFMSG 3,8,'COLLECT POINTS FOR LETTERS'
I6MSG5:		DEFMSG 3,10,'PLACED OR CONTINUE AS NORMAL.'
I6MSG6:		DEFMSG 3,12,'A GAME LASTS 7 ROUNDS.'
;
INST6:		DW HDR6,I6MSG1,I6MSG2,I6MSG3,I6MSG4,I6MSG5
                DW I6MSG6,PGLL23
ENDI6:
;
;
;
HELPBG:		DW INST1,ENDI1,INST2,ENDI2,INST3,ENDI3,INST4,ENDI4
		DW INST5,ENDI5,INST6,ENDI6
HELPED:
;
PTR:	DW	00
ENDPTR: DW	00
PTRCON: DW	00
;
;
HLPENT::
	LD	A,1		;turn on help flag
	JR	RSTEN1
;
RSTENT::
	LD	A,0		;turn off help flag
RSTEN1:	LD	(HFLAG),A
;
INTRO::
	LD	SP,STKEND	;put back the stack
			;so that RESTART reenters ok
	CALL	MENU	;display menu page
	CALL	KEYBD	;flush key buffer
WAIT:	CALL	KEYBD	;wait for instructions
	JR	Z,WAIT
;
	CP	0EAH	;check for HELP key
	JP	Z,INSTR ;go to instructions
	CP	0DH	;check for GO key
	JP	Z,GAME
	JR	WAIT
;
;
INSTR:	PCALL	RPATRN,TCHRST		;put back the letters
;
; *** warning *** a sneaky way to reverse the inverted
;	video without using a second color table
	PCALL	VRAML8,008H,CLR1,(V.COL);restore color table
;
	LD	IX,HELPBG
HLPLP1:
	PCALL	VFILL,0400H,020H,(V.PNT);CLEAR SCREEN
	LD	C,(IX)			;PUT UP AN INSTRUCTION SCREEN
	LD	B,(IX+1)
	LD	E,(IX+2)
	LD	D,(IX+3)
	CALL	DRWSCN
HLPLP2:
	CALL	KEYBD			;CHECK FOR KEYBOARD INPUT	
	JR	Z,HLPLP2		;
					;
	CP	0DH			;GO? START GAME
	JP	Z,GAME			;
					;
	CP	0ABH			;RESTART?
	JP	Z,RSTENT		;
					;
	CP	0BDH			;RESTART?
	JP	Z,RSTENT		;
					;
	CP	0E4H			;FORWARD A PAGE?
 	JR	Z,FDPAGE		;
					;
	CP	0E5H			;BACK A PAGE?
	JR	Z,BKPAGE		;
					;
	CP	0B1H			;SYM1? PRINT HELP
	JP	Z,PRHELP		;
					;
	JR	HLPLP2			;
					;
FDPAGE:					;
	PUSH	IX			;
	POP	BC			;
					;
	LD	HL,HELPED-4		;IS IT = TO HELPED - 4?
	AND	A			;
	SBC	HL,BC			;
	JP	Z,HLPLP2		;IF IT IS THEN IGNORE INPUT
	LD	BC,4			;IF NOT PUT UP NEXT PAGE
	ADD	IX,BC			;
	JP	HLPLP1			;
					;
BKPAGE:					;
	PUSH	IX			;
	POP	BC			;
	LD	HL,HELPBG		;IF IX = HELPBG THEN 
	AND	A			;	CAN'T PAGE BACKWARD
	SBC	HL,BC			;ELSE PAGE BACKWARD
	JP	Z,HLPLP2		;
	DEC	IX			;
	DEC	IX			;
	DEC	IX			;
	DEC	IX			;
	JP	HLPLP1			;
					;
PRHELP:					;
	PUSH	IX			;SAVE IX
	LD	IX,HELPBG		;
	LD	A,00H			;SETUP NUMBER OF LINES TO SKIP
	PUSH	AF			;
HLPLP3:					;
	PCALL	VFILL,0400H,020H,(V.PNT);CLEAR SCREEN
	LD	C,(IX)			;
	LD	B,(IX+1)		;
	LD	E,(IX+2)		;
	LD	D,(IX+3)		;
	CALL	DRWSCN			;PUT UP AN INSTRUCTION SCREEN
	POP	AF			;
	XOR	01H			;
	PUSH	AF			;
	LD	C,A			;PASS C NUMBER OF LINES TO SKIP
	CALL	PRTHLP			;PRINT HELP SCREEN
	JR	C,OUT1			;IF NO CARRY THEN PRINT NEXT PAGE
	PUSH	IX			;ELSE STOP PRINTING
	POP	BC			;
	LD	HL,HELPED-4		;
	AND	A			;
	SBC	HL,BC			;
	JR	Z,OUT1			;
	LD	BC,4			;
	ADD	IX,BC			;
	JR	HLPLP3			;
					;
OUT1:	POP	AF			;
	POP	IX			;
	JP	HLPLP1			;
;
;INSTR1:	PCALL	VFILL,0400H,020H,(V.PNT);clear the screen
;
;	PCALL	DRWSCN,INST1,ENDI1	 ;first page
;WAIT1:	CALL	KEYBD
;	JR	Z,WAIT1
;	CP	0E4H		;forward a page?
;	JP	Z,INSTR2
;	CALL	CHEKRES         ;checking for restart key 
;	CP	0DH		;GO ?
;	JP	Z,GAME
;	JR	WAIT1
;
;
;INSTR2:	PCALL	VFILL,0400H,020H,(V.PNT);clear the screen
;
;	PCALL	DRWSCN,INST2,ENDI2	 ;second page
;WAIT2:	CALL	KEYBD
;	JR	Z,WAIT2
;	CP	0E5H		;backup a page?
;	JP	Z,INSTR1
;	CP	0E4H		;forward a page?
;	JP	Z,INSTR3
;	CALL    CHEKRES		;CHECKING FOR RESTART KEY
;	CP	0DH		;GO ?
;	JP	Z,GAME
;	JR	WAIT2
;
;
;INSTR3:	PCALL	VFILL,0400H,020H,(V.PNT);clear the screen
;
;	PCALL	DRWSCN,INST3,ENDI3	 ;second page
;WAIT3:	CALL	KEYBD
;	JR	Z,WAIT3
;	CP	0E5H		;backup a page?
;	JP	Z,INSTR2
;	CP	0E4H		;forward a page?
;	JP	Z,INSTR4
;	CALL    CHEKRES		;CHECKING FOR RESTART KEY
;	CP	0DH		;GO ?
;	JP	Z,GAME
;	JR	WAIT3
;
;
;INSTR4:	PCALL	VFILL,0400H,020H,(V.PNT);clear the screen
;
;	PCALL	DRWSCN,INST4,ENDI4	 ;second page
;WAIT4:	CALL	KEYBD
;	JR	Z,WAIT4
;	CP	0E5H		;backup a page?
;	JP	Z,INSTR3
;	CP	0E4H		;forward a page?
;	JP	Z,INSTR5
;	CALL    CHEKRES		;CHECKING FOR RESTART KEY
;	CP	0DH		;GO ?
;	JP	Z,GAME
;	JR	WAIT4
;
;
;INSTR5:	PCALL	VFILL,0400H,020H,(V.PNT);clear the screen
;
;	PCALL	DRWSCN,INST5,ENDI5	 ;second page
;WAIT5:	CALL	KEYBD
;	JR	Z,WAIT5
;	CP	0E5H		;backup a page?
;	JP	Z,INSTR4
;	CP	0E4H		;forward a page?
;	JP	Z,INSTR6
;	CALL    CHEKRES		;CHECKING FOR RESTART KEY
;	CP	0DH		;GO ?
;	JP	Z,GAME
;	JR	WAIT5
;
;
;INSTR6:	PCALL	VFILL,0400H,020H,(V.PNT);clear the screen
;
;	PCALL	DRWSCN,INST6,ENDI6	 ;Third page
;WAIT6:	CALL	KEYBD
;	JR	Z,WAIT6
;	CP	0E5H		;backup a page?
;	JP	Z,INSTR5
;	CALL    CHEKRES		;CHECK FOR RESTART
;	CP	00DH		;GO ?
;	JR	NZ,WAIT6
;
;
;CHEKRES:
;	CP 	0ABH		;RESTART
;	JP      Z,RSTUP
;	CP      0BDH		;RESTART
;	RET	NZ
;RSTUP:	POP	AF              
;	JP	RSTENT		;restart is pressed then go to the beginning
;                                ;of the menu
;
;
;	PCALL	VFILL,0400H,020H,(V.PNT);clear the screen
;
;	JP	GAME
;
GAME::	PCALL	VFILL,0400H,020H,(V.PNT);CLEAR SCREEN
	JP	SETMEM
;
;
;	KEYBD  calls NABUSYS and gets a character if there
;	is one or returns with a 0 in A reg.
;	*** WARNING *** there is another routine in ALPHAMAC
;	calles KYBD:: which returns the byte in the address pointed
;	to by HL.
;
;
KEYBD:	

	N.DEVRDY  KEYBOARD,KEYSTROKE	;TEST KEYBOARD STATIUS
	CP 0
	RET Z
	N.DEVIO KEYBOARD,KEYSTROKE	;GET THE KEY STROKE  	  
	RET


;	LD	C,6	;set up for call
;	LD	E,0FFH
;	CALL	0008H	;BDOS call
;	OR	A	;set flags
;	RET
;
;
MENU:		PCALL VSETG1	    ; SET FOR GRAPHICS MODE
		SETCOLR DBLUE,WHITE ;SET FOR WHITE ON DBLUE
		PCALL VNAMEST,(V.PNT);NAME TABLE TO START 2000H
		PCALL VPTRNST,(V.PGT); SET PATTERN START TO 0H
		PCALL VCOLRST,(V.COL)
		PCALL RPATRN,TCHRST ;READ IN TEXT CHARACER SET
		PCALL VFILL,0400H,020H,(V.PNT);FILL SCREEN WITH BLANKS
;
		PCALL VRAML8,020H,CLR,(V.COL)	;fill the color table
;
		PCALL VATRIST,(V.SNT)
		PCALL VSPRIST,(V.SGT)
		PCALL SPMARK,0,0D0H,0  ;SET SPMARK, NO SPRITES
;
	LD	A,(HFLAG)	;see if he wants HELP
	OR	A
	JP	NZ,INSTR
;
		PCALL PUTLOGO,02H,0H,2
;
 ;LOOP WHILE WRITING THE TEXT LINES ON THE SCREEN.
;
		LD BC,DATA	;SET POINTER TO DRAW..
		LD DE,ENDATA	;.. MENU PAGE
;
DRWSCN: 	LD (PTR),BC
		LD (ENDPTR),DE
;
		REPEAT.
		LD HL,(PTR)	;GET CONTENTS OF POINTER
		LD A,(HL)
		LD C,A
		INC HL
		LD A,(HL)
		LD B,A
		LD (PTRCON),BC	;POINTS TO MESSAGE BLOCK
		PCALL PUTMSG,(PTRCON) ;PUT MESSAGE ON SCREEN
		LD HL,(PTR)
		INC HL
		INC HL
		LD (PTR),HL  ;SET FOR NEXT MESSAGE BLOCK
		UNTIL16. (PTR) .EQ. (ENDPTR)  ;DO IT UNTIL DONE
;
		PCALL VBLKOFF	;UNBLANK SCREEN
;
;
		RET
;
;
;
;
	.RADIX 16
;
CLR:	0F4,0F4,0F4,0F4,0F4,0F4,0F4,0F4
CLR1:	0F4,0F4,0F4,0F4,0F4,0F4,0F4,0F4
	0F4,0F4,0F4,0F4,0F4,0F4,0F4,0F4
	0F4,0F4,0F4,0F4,0F4,0F4,0F4,0F4

;
;
;
;
;	SET UP THE VIDEO RAM FOR ALPHA BLAST
;
;	17 AUGUST 82 JOHN ALLEN
;
;
	.RADIX 10
;
;
;
SETMEM::CALL	ENTRY
	JP	$MAIN
;
ENTRY::
;
	PCALL	VSETG1		;SET GRAPHIC MODE 1
	PCALL	VFILL,4000H,0,0 ;ZERO VRAM
	PCALL	VNAMEST,(V.PNT) ;SET PATERN NAME TABLE TO START AT 1C00H
	PCALL	VCOLRST,(V.COL) ;SET COLOUR TABLE TO START AT 2000H
	PCALL	VPTRNST,(V.PGT) ;SET PATERN GENERATION TABLE AT 00H
	PCALL	VATRIST,(V.SNT) ;SET SPRITE ATTRIBUTE TABLE AT 1F00H
	PCALL	VSPRIST,(V.SGT) ;SET SPRITE GENERATOR TABLE AT 1800H
	SETCOLR DBLUE,DBLUE	;SET BACKGROUND COLOUR TO DARK BLUE
;
	PCALL	VRAMLD,(LTBPNT),DATPNT,(V.PGT)	       ;READ THE
				;PATTERNS INTO VRAM
;
;	FILL IN THE EXPLOSION PATTERNS
;
	XOR	A		;ZERO A
	LD	(COUNT),A
	LD	HL,(V.PGT)	;ADDR OF PAT GEN TAB
	LD	DE,176*8
	ADD	HL,DE
	LD	(TMPPGT),HL
;
	REPEAT.
;
;
		PCALL	VRAML8,40H,DATEXP,(TMPPGT)
;
		LD	HL,(TMPPGT)	;UP ADDR OF PGT
		LD	DE,40H
		ADD	HL,DE
		LD	(TMPPGT),HL
;
		LD	A,(COUNT)
		INC	A
		LD	(COUNT),A
;
;
	UNTIL8. (COUNT) .GT.  0AH
;
;
;
	PCALL	VRAML8,020H,DATCOL,(V.COL)	;READ INTO VRAM THE COLOUR
						;TABLE
	PCALL	VRAMLD,(LTBSGT),DATSGT,(V.SGT)	       ;READ THE
;						     SPRITE PATTERNS
	PCALL	VRAMLD,(LTBSNT),DATSNT,(V.SNT)	       ;READ THE
				; SPRITE NAME TABLE
	PCALL	SPMARK,6	;PUT END OF SPRITE MARK IN SPRITE 6
	PCALL	SPMARK,0	;TURN OFF SPRITES TEMPORARILY
;
;	INITIALIZE THE SOUND REGS
;
	LD	A,0H
	LD	(COUNT),A
	REPEAT.
		PCALL	AUDIOWR,(COUNT),0H
		LD	A,(COUNT)
		INC	A
		LD	(COUNT),A
	UNTIL8. (COUNT) .GT. 0DH
;
	PCALL	VBLKOFF 	;UNBLANK SCREEN
;
;
;
	RET
;
;
;
;
;
;
;
;
;	THE VARIABLES
;
;
COUNT:	DB	0
TMPPGT: DW	0
;
;
;	THE DATA TABLES
;
;
LTBPNT: DW	(TMP2-TMP1)	;NO OF PATTERNS
;
;
DATPNT:
;
;
TMP1:
;
	DB 0,0,0,0,0,0,0,0			; 00  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 01  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 02  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 03  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 04  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 05  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 06  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 07  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 08  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 09  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 10  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 11  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 12  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 13  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 14  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 15  *** NOT USED
	DB 1,1,1,1,1,1,1,1			; 16  FUSES
	DB 128,128,128,128,128,128,128,128	; 17
	DB 28,24,48,48,96,96,192,192		; 18
	DB 0,0,0,0,1,3,7,14			; 19
	DB 7,31,124,240,192,128,0,0		; 20
	DB 240,0,0,0,0,0,0,0			; 21
	DB 0,0,0,0,0,0,15,255			; 22
	DB 0,0,0,0,0,248,248,0			; 23
	DB 0,0,0,0,0,0,0,0			; 24  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 25  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 26  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 27  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 28  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 29  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 30  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 31  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 32  SPACE
	DB 128,128,128,128,128,128,128,128	; 33  VERT LINE LEFT NOT !
	DB 80,80,80,0,0,0,0,0			; 34  QUOTE
	DB 1,1,1,1,1,1,1,255			; 35  RI BOT CORN NOT #
	DB 020H,078H,0A0H,070H,028H,0F0H,020H,0 ; 36  $
	DB 0,0,0,0,0,0,0,255			; 37  HORZ LINE NOT %
	DB 1,1,1,1,1,1,1,1			; 38  VERT LINE NOT &
	DB 0,0,0,0,0,0,0,0			; 39  *** NOT USED
	DB 32,64,128,128,128,64,32,0		; 40  (
	DB 32,16,8,8,8,16,32,0			; 41  )
	DB 020H,0A8H,070H,020H,070H,0A8H,020H,0 ; 42  *
	DB 0F8H,0F8H,0F8H,0F8H,0F8H,0F8H,0F8H,0 ; 43  SOLID NOT +
	DB 0,0,0,0,0,0,0,0			; 44  *** NOT USED
	DB 0,0,0,0F8H,0,0,0,0			; 45  MINUS SIGN
	DB 0,0,0,0,0,0,32,0			; 46  PERIOD .
	DB 0,8,16,32,64,128,0,0 		; 47  /
	DB 070H,088H,098H,0A8H,0C8H,088H,070H,000H  ; 48  0
	DB 020H,060H,020H,020H,020H,020H,070H,000H  ; 49  1
	DB 070H,088H,008H,030H,040H,080H,0F8H,000H  ; 50  2
	DB 0F8H,008H,010H,030H,008H,088H,070H,000H  ; 51  3
	DB 010H,030H,050H,090H,0F8H,010H,010H,000H  ; 52  4
	DB 0F8H,080H,0F0H,008H,008H,088H,070H,000H  ; 53  5
	DB 038H,040H,080H,0F0H,088H,088H,070H,000H  ; 54  6
	DB 0F8H,008H,010H,020H,040H,040H,040H,000H  ; 55  7
	DB 070H,088H,088H,070H,088H,088H,070H,000H  ; 56  8
	DB 070H,088H,088H,078H,008H,010H,0E0H,000H  ; 57  9
	DB 0,0,0,0,0,0,0,0			; 58  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 59  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 60  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 61  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 62  *** NOT USED
	DB 070H,088H,010H,020H,020H,0,020H,0	; 63  ?
	DB 0,0,0,0,0,0,0,0			; 64  *** NOT USED
;	DBLETTER PATTERNS
	DB 020H,050H,088H,088H,0F8H,088H,088H,000H  ; 65  A
	DB 0F0H,088H,088H,0F0H,088H,088H,0F0H,000H  ; 66  B
	DB 070H,088H,080H,080H,080H,088H,070H,000H  ; 67  C
	DB 0F0H,088H,088H,088H,088H,088H,0F0H,000H  ; 68  D
	DB 0F8H,080H,080H,0F0H,080H,080H,0F8H,000H  ; 69  E
	DB 0F8H,080H,080H,0F0H,080H,080H,080H,000H  ; 70  F
	DB 078H,080H,080H,080H,098H,088H,078H,000H  ; 71  G
	DB 088H,088H,088H,0F8H,088H,088H,088H,000H  ; 72  H
	DB 070H,020H,020H,020H,020H,020H,070H,000H  ; 73  I
	DB 008H,008H,008H,008H,008H,088H,070H,000H  ; 74  J
	DB 088H,090H,0A0H,0C0H,0A0H,090H,088H,000H  ; 75  K
	DB 080H,080H,080H,080H,080H,080H,0F8H,000H  ; 76  L
	DB 088H,0D8H,0A8H,0A8H,088H,088H,088H,000H  ; 77  M
	DB 088H,088H,0C8H,0A8H,098H,088H,088H,000H  ; 78  N
	DB 070H,088H,088H,088H,088H,088H,070H,000H  ; 79  O
	DB 0F0H,088H,088H,0F0H,080H,080H,080H,000H  ; 80  P
	DB 070H,088H,088H,088H,0A8H,090H,068H,000H  ; 81  Q
	DB 0F0H,088H,088H,0F0H,0A0H,090H,088H,000H  ; 82  R
	DB 070H,088H,080H,070H,008H,088H,070H,000H  ; 83  S
	DB 0F8H,020H,020H,020H,020H,020H,020H,000H  ; 84  T
	DB 088H,088H,088H,088H,088H,088H,070H,000H  ; 85  U
	DB 088H,088H,088H,088H,088H,050H,020H,000H  ; 86  V
	DB 088H,088H,088H,0A8H,0A8H,0D8H,088H,000H  ; 87  W
	DB 088H,088H,050H,020H,050H,088H,088H,000H  ; 88  X
	DB 088H,088H,050H,020H,020H,020H,020H,000H  ; 89  Y
	DB 0F8H,008H,010H,020H,040H,080H,0F8H,000H  ; 90  Z
	DB 0,0,0,0,0,0,0,0			; 91  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 92  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 93  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 94  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 95  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 96  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 97  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 98  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 99  *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 100 *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 101 *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 102 *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 103 *** NOT USED
	DB 130,132,134,133,132,132,132,132	; 104 DYNAMITE
	DB 132,132,132,132,132,132,132,196	; 105
	DB 228,244,252,254,191,159,143,135	; 106
	DB 133,132,132,132,132,132,132,132	; 107
	DB 2,1,3,5,249,1,1,1			; 108
	DB 1,1,1,1,1,1,1,1			; 109
	DB 1,1,1,1,129,241,255,255		; 110
	DB 255,127,15,1,1,1,1,1 		; 111
	DB 64,128,192,160,159,128,128,128	; 112
	DB 128,128,128,128,128,128,128,128	; 113
	DB 128,128,128,128,129,143,255,255	; 114
	DB 255,254,240,128,128,128,128,128	; 115
	DB 65,33,97,161,33,33,33,33		; 116
	DB 33,33,33,33,33,33,33,35		; 117
	DB 39,47,63,127,253,249,241,225 	; 118
	DB 161,33,33,33,33,33,33,33		; 119
	DB 255,255,255,255,255,255,127,63	; 120
	DB 31,7,7,7,7,3,1,0			; 121
	DB 255,255,255,255,255,255,255,255	; 122
	DB 255,255,255,255,255,254,252,248	; 123
	DB 255,255,255,255,255,255,255,255	; 124
	DB 255,255,255,255,255,127,63,31	; 125
	DB 255,255,255,255,255,255,254,252	; 126
	DB 248,224,224,224,224,192,128,0	; 127
	DB 0,1,3,7,7,7,7,31			; 128
	DB 63,127,255,255,255,255,255,255	; 129
	DB 249,253,255,255,255,255,255,255	; 130
	DB 255,255,255,255,255,255,255,255	; 131
	DB 159,191,255,255,255,255,255,255	; 132
	DB 255,255,255,255,255,255,255,255	; 133
	DB 0,128,192,224,224,224,224,248	; 134
	DB 252,254,255,255,255,255,255,255	; 135
	DB 248,240,224,240,248,255,255,255	; 136 BOMB RIGHT SIDE
	DB 0,0,0,0,0,0,192,240			; 137
	DB 252,254,255,255,255,255,255,255	; 138
	DB 0,0,0,128,192,224,240,240		; 139
	DB 248,248,252,252,254,254,254,254	; 140
	DB 254,254,254,254,252,252,248,248	; 141
	DB 240,240,224,192,128,0,0,0		; 142
	DB 255,255,255,255,255,255,254,252	; 143
	DB 255,255,255,240,0,0,0,0		; 144 BOMB BOTTOM
	DB 240,192,0,0,0,0,0,0			; 145
	DB 255,255,255,255,255,255,127,63	; 146
	DB 15,3,0,0,0,0,0,0			; 147
	DB 255,255,255,15,0,0,0,0		; 148
	DB 0,0,0,0,0,0,0,0			; 149 *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 150 *** NOT USED
	DB 0,0,0,0,0,0,0,0			; 151 *** NOT USED
	DB 31,15,7,15,31,255,255,255		; 152 BOMB LEFT SIDE
	DB 0,0,0,0,0,0,3,15			; 153
	DB 0,0,0,1,3,7,15,15			; 154
	DB 63,127,255,255,255,255,255,255	; 155
	DB 255,255,255,255,255,255,255,255	; 156
	DB 31,31,63,63,127,127,127,127		; 157
	DB 127,127,127,127,63,63,31,31		; 158
	DB 15,15,7,3,1,0,0,0			; 159
	DB 0,0,0,128,64,32,24,7 		; 160 PATTERNS ON BOMB
	DB 240,15,0,0,0,0,0,0			; 161
	DB 0,128,127,0,0,0,0,0			; 162
	DB 0,1,254,0,0,0,0,0			; 163
	DB 15,240,0,0,0,0,0,0			; 164
	DB 0,0,0,1,2,4,24,224			; 165
	DB 0,1,3,3,3,3,1,0			; 166
	DB 240,248,252,252,252,252,248,240	; 167
;
TMP2:
;
;
;
LTBSGT: DW	(TMP4-TMP3)
;
;
;
DATSGT:
;
TMP3:
;
;	SPRITE 0
	DB 4,4,18,8,96,17,3,115
	DB 3,17,96,8,18,4,4,0
	DB 144,144,164,8,3,196,224,231
	DB 224,196,3,8,164,144,144,0
;	SPRITE1 			THE MOVING FUSE
	DB 0,0,0,8,0,0,0,8
	DB 0,0,0,0,16,0,0,0
	DB 144,0,0,0,0,32,0,144
	DB 0,0,2,0,32,0,0,0
;	SPRITE 2
	DB 0,0,16,0,0,0,0,16
	DB 0,16,0,0,0,0,0,0
	DB 0,0,0,0,16,128,0,136
	DB 0,128,1,0,0,16,0,0
;	SPRITE 3
	DB 0,0,0,0,0,18,0,34
	DB 0,0,32,0,0,0,0,0
	DB 0,0,0,8,128,0,0,132
	DB 0,0,128,0,0,0,16,0
;	SPRITE 4
	DB 0,0,0,0,36,0,0,68
	DB 0,0,64,0,2,0,0,0
	DB 0,0,4,128,0,0,0,162
	DB 0,0,0,128,0,0,0,0
;	SPRITE 5
	DB 0,0,0,8,64,0,0,8
	DB 0,0,0,0,0,4,0,0
	DB 0,0,128,0,0,32,0,145
	DB 0,32,0,0,128,0,0,0
;	SPRITE 6
	DB 0,0,16,0,0,0,0,16
	DB 0,0,0,0,0,0,4,0
	DB 0,128,0,0,16,0,0,136
	DB 0,128,16,0,0,128,0,0
;	SPRITE 7
	DB 0,0,0,0,0,0,0,32
	DB 0,2,0,0,0,0,0,0
	DB 128,0,0,8,0,0,0,132
	DB 0,0,128,8,0,0,128,0
;	SPRITE 8
	DB 0,0,2,0,0,0,0,64
	DB 0,0,4,0,0,0,0,0
	DB 0,0,4,0,0,128,0,130
	DB 0,0,0,128,4,0,0,0
;	SPRITE 9
	DB 0,4,0,0,0,0,0,0
	DB 0,0,0,8,0,0,0,0
	DB 0,0,0,0,128,0,0,129
	DB 0,32,0,0,128,0,0,0
;	SPRITE 10
	DB 4,0,0,0,0,0,0,0
	DB 0,2,0,0,16,0,0,0
	DB 0,0,0,128,0,4,0,128
	DB 0,0,16,0,0,128,0,0
;	SPRITE 11
	DB 0,0,0,0,0,2,0,2
	DB 0,0,4,0,0,0,0,0
	DB 0,0,160,0,2,0,0,128
	DB 0,0,0,8,0,0,128,0
;	SPRITE 12
	DB 0,0,0,0,4,0,0,4
	DB 0,0,0,8,0,0,0,0
	DB 0,144,0,0,1,0,0,160
	DB 0,4,0,0,4,0,0,0
;	SPRITE 13+
	DB 0,1,2,4,6,5,4,31			;    TOP LEFT DYNAMITE
	DB 32,64,128,192,160,159,128,129	; 1
	DB 249,5,3,1,3,5,249,7			; 50
	DB 137,81,33,112,168,39,248,4		; 51
;
	DB 159,160,192,128,192,160,159,224	; 52 TOP RIGHT DYNAM
	DB 145,138,132,14,21,228,31,32		;
	DB 0,128,64,32,96,160,32,248		;
	DB 4,2,1,3,5,249,1,129			;
;
	DB 132,132,132,132,132,132,68,36	;    BOT LEFT DYNAMITE
	DB 28,4,4,4,4,2,1,0			;
	DB 1,1,1,1,1,1,1,1			;
	DB 1,1,1,1,1,2,4,248			;
;
	DB 128,128,128,128,128,128,128,128	;    BOT RIGHT DYNAM
	DB 128,128,128,128,128,64,32,31 	;
	DB 33,33,33,33,33,33,34,36		;
	DB 56,32,32,32,32,64,128,0		;
;
	DB 0,0,0,0,0,0,1,3			;  68 RED FUSE
	DB 3,1,0,0,0,0,0,0			;  69
	DB 0,0,0,0,0,  0,128,192		;  70 (17)PATTERN
	DB 192,128,0,0,0,0,0,0			;  71
;
;
TMP4:
;
;
;
;      COLOR DATA
;
DATCOL:
	DB 240,  1, 16,240,240,240,240,240	; 0-7
	DB 240,240,240,240,240, 24, 24,128	; 8-15
	DB 128, 16, 16, 16			; 16-23
	DB 225,240,240,240			; PATTERNS ON BOMB
	DB 240,240,240,240,240,240,240,240	; '24-31
;
;
;
LTBSNT: DW	TMP6-TMP5	;NO OF BYTES IN TABLE
;
;
;
DATSNT:
;
TMP5:	DB	71,56,0,0	;LEFT FUSE
	DB	71,184,4,0	;RIGHT FUSE
	DB	208,176,52,1	;TOP LEFT DYN CLEAN UP
	DB	79,192,56,1	;TOP RIGHT DYN CLEAN UP
	DB	127,176,60,1	;BOT LEFT " " "
	DB	127,192,64,1	;BOT RIGHT " " "
;
TMP6:
;
;
;      DIAMOND PATTERN GEN TABLE    PATTERNS NO 176-255
;
DATEXP: DB 0,128,96,124,62,62,62,30		; 0  TOP LEFT CORNER
	DB 16,16,56,56,124,124,254,254		; 1  TOP
	DB 0,2,12,124,248,248,248,240		; 2 TOP RIGHT CORNER
	DB 0,192,248,252,255,252,248,192	; 3  RIGHT
	DB 0,240,248,248,248,124,12,2		; 4 BOT RIGHT
	DB 254,254,124,124,56,56,16,16
	DB 0,30,62,62,62,124,96,128		; 6 BOTTOM LEFT
	DB 0,3,15,63,255,63,15,3
;
HFLAG:	DW	0		;help flag 1 entered via HELP key
				;0 entered via RESTART key
;
;
	END	START
 