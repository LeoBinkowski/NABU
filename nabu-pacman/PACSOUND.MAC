;*****************************************************************
;*                                                               *
;*    FILE NAME:        PACSOUND.MAC                             *
;*                                                               *
;*    MODULE PART NO.: 73-90034420 NAME:  PAC MAN 		 *
;*                                                               *
;*    FILE DESCRIPTION:                                          *  
;*      contains the sound for pacman, run as a task             *
;*      from the main module.                                    *
;*                                                               *
;*                                                               *
;*                                                               *
;*                                                               *
;*                                                               *
;*    PROGRAMMER: L. Binkowski, L. Schening                      *
;*                                                               *
;*    ENVIRONMENT- Development Machine: NABU 1100, MCP 1.8       *
;*                                                               *
;*               - Assembler: MACRO-80                           *
;*                                                               *
;*                                                               *
;*****************************************************************
;*                                                               *
;*    REVISION HISTORY: (current first)                          *
;*                                                               *
;*    Rev.    Date       Created By         Revision Details     *
;*    ---  ----------  ---------------  -----------------------  *
;*                                                               *
;*    01   04 OCT 83    L. Binkowski    Initial release to spec  *
;*                                                               *
;*****************************************************************
 	;
	.Z80
	CSEG
	.XLIST
	.PRINTX	/PACMAN SOUND ROUTINES....DECEMBER 12, 1983/
	INCLUDE	COMMON.MRO
	INCLUDE STRUCT.MRO
	INCLUDE ARITH.MRO
	.LIST
;
	EXTRN 	FREEFLG,EYEFLG,WACFLG,CKAFLG,WKDEL,WKDEL1,GHOFLG,FRTFLG,PPFLG
	EXTRN	AUDIOWR,DOTFL,TMPX,DEADFL
;
;
;
CURTMR::DB	00H
CURPER::DW	0000H
OLDPAT:	DB	00H
DIETGL:	DB	00H
;
;  DATA AND VARIABLES FOR PING OF FREE MAN INDICATION
PINGREG:  DB   4,  5,  7, 10, 10, 10, 10, 10, 10, 10,0FFH, 10, 10, 10, 10,0FFH
PINGDAT:  DB  1EH,00,38H,0EH,0CH,0AH,08H,06H,04H,03H
R:	DB	0
DD:	DB	0
RPTR:	DW	0
DPTR:	DW	0
RSAVE:	DW	0
DELAY:	DB	0
KOUNT:	DB	0
;
;  GHOST EYES RUNNING HOME SOUND
FREQ:	DB	014H
ALTER:	DB	0
;
;  VARIABLES IN WAC OF WACKA
AL:	DB	0
FINE:	DB	052H
COARSE:	DB	02H
CNTLP:	DB	0
WAIT:	DB	0
;
;  VARIABLES IN CKA OF WACKA
ALT:	DB	0
FNE:	DB	054H
CRSE:	DB	0
CTLOOP:	DB	0
WAIT1:	DB	0
;
;  VARIABLES FOR GHOST BEING EATEN SOUND
FPA:	DB	0F4H
CPA:	DB	01H
SWITCH:	DB	00
KT:	DB	0
SWT:	DB	0
LBKT:	DB	0
SECFLG:	DB	0
;
;  VARIABLES FOR FRUIT GULPING SOUND
FTONE:	DB	0EEH
CTONE:	DB	02H
WT:	DB	0
WTE:	DB	0
SW:	DB	0
AA:	DB	0DH
FIVE:	DB	0
LAGKT:	DB	0
;
;  VARIABLES FOR THE POWER PILL ACTIVATION SOUND
FQUENCE:DB	058H
CQUENCE:DB	02H
AMPTD:	DB	08H
WT1:	DB	0
WT2:	DB	0
LOOP1:	DB	0
LOOP2:	DB	0
PART2:	DB	0
GB1:	DB	0
GB2:	DB	0
;
NOISES::
	PCALL	AUDIOWR,7,38H
	;
	LD	A,(GHOFLG)
	AND	A
	JP	NZ,GHOEAT
	;
	LD	A,(FREEFLG)
	AND	A
	JP	NZ,FREEMAN
	;
	LD	A,(FRTFLG)
	AND	A
	JP	NZ,FRTGLP
	;
	LD	A,(EYEFLG)
	AND	A
	JP	NZ,EYES
	;
	LD	A,(PPFLG)
	AND	 A
	JP	NZ,PPILL
	;
	LD	A,(DEADFL)	;SEE IF THE PACMAN IS CURRENTLY DYING
	AND	A
	JP	NZ,DIESND
	;
	LD	A,(CURTMR)	;GET THE STATUS OF MY NOISE CLOCK
	AND	A		;IS IT ZERO?
	JP	NZ,CHK2		;NO..THEN CHECK ANOTHER POINT
	;
	PCALL	AUDIOWR,5,02H
	PCALL	AUDIOWR,4,0BCH
	PCALL	AUDIOWR,10,08H
	LD	HL,02BCH
	LD	(CURPER),HL
	JP	INCTMR
	;
CHK2:	CP	23		;COMPARE IT TO THE FIRST MILESTONE
	JP	C,DECPER	;IF LESS THEN DECREMENT THE PERIOD
	;
	CP	46		;COMPARE IT TO THE SECOND MILESTONE
	JP	C,INCPER	;IF LESS THEN INCREMENT THE PERIOD
	;
	XOR	A
	LD	(CURTMR),A	;OTHERWISE CLEAR THE TIMER
	RET
	;
INCPER:	LD	HL,(CURPER)	;INCREMENT THE PERIOD
	LD	BC,25
	ADD	HL,BC
	LD	(CURPER),HL
	JP	INCTMR
	;
DECPER:	XOR	A		;DECREMENT THE PERIOD
	LD	HL,(CURPER)
	LD	BC,25
	SBC	HL,BC
	LD	(CURPER),HL
	;
INCTMR:				;INCREMENT THE TIMER
	LD	A,(CURTMR)
	INC	A
	LD	(CURTMR),A
	JP	EXECPR
	;
DIESND:	;THIS PART OF THE ROUTINE MAKES THE SOUND OF A PACMAN DYING
	;
	PCALL	AUDIOWR,10,0FH
	LD	A,(TMPX)
	CP	08H
	JP	NZ,NOTINI
	LD	HL,350
	LD	(CURPER),HL
	LD	A,(TMPX)
	LD	(OLDPAT),A
	LD	A,00H
	LD	(DIETGL),A
	LD	A,(TMPX)
	JP	DIE1A
	;
NOTINI:	LD	HL,(OLDPAT)
	CP	L
	JP	Z,DIE1A
	LD	(OLDPAT),A
	;
	LD	A,(DIETGL)
	XOR	1
	JP	Z,DIE1A
	;
	LD	HL,(CURPER)
	LD	BC,0FAH
	SBC	HL,BC
	LD	(CURPER),HL
	JP	EXECPR
	;
DIE1A:	LD	HL,(CURPER)
	LD	BC,30
	ADD	HL,BC
	LD	(CURPER),HL
	;
EXECPR:	
	PUSH	HL
	POP	DE
	PCALL	AUDIOWR,4
	LD	A,(CURPER+1)
	LD	E,A
	PCALL	AUDIOWR,5
;
DOTHIS:	LD	A,(WACFLG)
	AND	A
	JP	NZ,WACKA
;
	LD	A,(CKAFLG)
	AND	A
	JP	NZ,WACKA1
;
	RET
;
;  THIS PART DOES FREE MAN INDICATION
;
FREEMAN:
	PCALL	AUDIOWR,7,00111011B
	IF8.	(DELAY),.NE.,0
	JP	DODEL
	ENDIF.
;
	LD	HL,PINGREG
	LD	(RPTR),HL
	LD	HL,PINGDAT
	LD	(DPTR),HL
;
DOSOUND:
	LD	HL,(RPTR)
	LD	(RSAVE),HL
RLOOP:	LD	HL,(RPTR)
	LD	A,(HL)
	CP	0FFH
	JP	Z,OFF
	CP	10
	JP	NZ,CONT
DODEL:	ADD8.	(DELAY),1
	IF8.	(DELAY),.LE.,2
	JP	DOTHIS
	ENDIF.
;
	ASIGN8.	(DELAY),0
	LD	HL,(RPTR)
	LD	A,(HL)
CONT:	LD	(R),A
	INC	HL
	LD	(RPTR),HL
;
	LD	HL,(DPTR)
	LD	A,(HL)
	LD	(DD),A
	INC	HL
	LD	(DPTR),HL
;
	PCALL	AUDIOWR,(R),(DD)
	JP	RLOOP
;
OFF:	LD	HL,(RSAVE)
	LD	(RPTR),HL
;
CNTOFF: LD	HL,(RPTR)
	LD	A,(HL)
	CP	0FFH
	JP	Z,OVER
	LD	(R),A
	INC	HL
	LD	(RPTR),HL
;
	XOR	A			;MAKES A EQUAL TO ZERO
	LD	(DD),A
;
	PCALL	AUDIOWR,(R),(DD)		;FILL USED REGISTERS WITH ZEROS
	JP	CNTOFF
;
OVER:	ADD8.	(KOUNT),1
	IF8.	(KOUNT),.EQ.,6		;FREEFLG=1 STARTS SOUND.
	 ASIGN8. (KOUNT),0
	 ASIGN8. (DELAY),0
	 ASIGN8. (FREEFLG),0		;I SEND BACK THE FREEMAN FLAG ZEROED
	 JP	DOTHIS				;WHEN THE SOUND IS DONE
	ENDIF.			;LEO  - CHECK FOR THIS TO KNOW WHEN FINISHED
;
	RET
;
EYES:	
	PCALL	AUDIOWR,0,(FREQ)
	PCALL	AUDIOWR,1,0		;ZERO COURSE TUNING
	PCALL	AUDIOWR,8,0DH		;AMPLITUDE OF 13
	PCALL	AUDIOWR,9,0
	PCALL	AUDIOWR,10,0
;
	LD	A,(ALTER)
	XOR	1			;COMPLIMENTS ALL BITS (SETS ZERO FLAG)
	LD	(ALTER),A
	RET	NZ
;
	IF8.	(FREQ),.GE.,076H		
	ASIGN8.	(FREQ),014H		;SOUND CONTINUES AS LONG AS EYEFLG=1
	 PCALL	AUDIOWR,0,0		;MAKE EYEFLG=0 AND CALL STPEYE TO RESET
	 PCALL	AUDIOWR,8,0		;THE VARIABLES FOR THE NEXT TIME
	 RET	
	ENDIF.
;
	ADD8.	(FREQ),7	
	JP	EYES	
;
STPEYE::	PCALL	AUDIOWR,0,0
		PCALL	AUDIOWR,8,0
;
		ASIGN8.	(ALTER),0
		ASIGN8.	(FREQ),014H
;
		RET
;
;   WAC SOUND FOR PACMAN EATING DOTS
;
WACKA::					;THIS IS ON CHANNEL B
;
	IF8.	(WAIT),.NE.,0
	JP	WAITLB
	ENDIF.
;
	PCALL	AUDIOWR,9,0EH		;ON B, GHOST NOISES ON A)
;
WLOOP:	LD	A,(AL)
	XOR	1
	LD	(AL),A
	RET	Z
;
	LD	HL,(FINE)	;TAKES FINE AND COARSE (NEXT BYTE IN TABLE)
	AND	A		;CLEAR CARRY FLAG
	LD	BC,0C8H		;SUBTRACT 150D
	SBC	HL,BC
	LD	(FINE),HL	;REPLACE IN FINE AND COARSE
;
	PCALL	AUDIOWR,2,(FINE)
	PCALL	AUDIOWR,3,(COARSE)
;
	LD	HL,(FINE)	;TAKES FINE AND COARSE (NEXT BYTE IN TABLE)
	AND	A		;CLEAR CARRY FLAG
	LD	BC,064H		;ADD 70D
	ADC	HL,BC
	LD	(FINE),HL	;REPLACE IN FINE AND COARSE
;
	PCALL	AUDIOWR,2,(FINE)
	PCALL	AUDIOWR,3,(COARSE)
;
	ADD8.	(CNTLP),1
	IF8.	(CNTLP),.LT.,4
	 JP	WLOOP
	ENDIF.
;
END:	PCALL	AUDIOWR,2,0	;TURN OFF SOUND 
	PCALL	AUDIOWR,3,0
	PCALL	AUDIOWR,9,0
;
WAITLB:	ADD8.	(WAIT),1
	IF8.	(WAIT),.LT.,(WKDEL)	;FOR HIGHER LEVELS WHEN WACKA GOES
	RET				;FASTER, DECREASE LENGTH OF WKDEL
	ENDIF.				;AND WKDEL1. (WKDEL ALWAYS 2 SHORTER
					;THAN WKDEL1)
	ASIGN8.	(WACFLG),0	;SELF-GENERATING UNTIL ENDWKA=1)
	ASIGN8.	(CNTLP),0
	ASIGN8.	(WAIT),0
	ASIGN8.(FINE),052H	;I TURN OFF THE SOUND HERE.
	ASIGN8.(COARSE),02H
	ASIGN8.	(AL),0
;
	RET	
;
;   CKA SOUND FOR PACMAN EATING DOTS
;
WACKA1::
;
	IF8.	(WAIT1),.NE.,0
	JP	WAIT1LB
	ENDIF.
;
	PCALL	AUDIOWR,09,0EH
;
WLP:	LD	A,(ALT)
	XOR	1
	LD	(ALT),A
	RET	Z
;
	LD	HL,(FNE)	;TAKES FINE AND COARSE (NEXT BYTE IN TABLE)
	AND	A		;CLEAR CARRY FLAG
	LD	BC,0AAH		
	ADC	HL,BC
	LD	(FNE),HL	;REPLACE IN FINE AND COARSE
;
	PCALL	AUDIOWR,2,(FNE)
	PCALL	AUDIOWR,3,(CRSE)
;
	LD	HL,(FNE)	;TAKES FINE AND COARSE (NEXT BYTE IN TABLE)
	AND	A		;CLEAR CARRY FLAG
	LD	BC,050H		
	SBC	HL,BC
	LD	(FNE),HL	;REPLACE IN FINE AND COARSE
;
	PCALL	AUDIOWR,2,(FNE)
	PCALL	AUDIOWR,3,(CRSE)
;
	ADD8.	(CTLOOP),1
	IF8.	(CTLOOP),.LT.,4
	 JP	WLP
	ENDIF.
;
END1:	PCALL	AUDIOWR,2,0	;TURN OFF SOUND 
	PCALL	AUDIOWR,3,0
	PCALL	AUDIOWR,9,0
;
WAIT1LB: ADD8.	(WAIT1),1
	IF8.	(WAIT1),.LT.,(WKDEL1)
	RET
	ENDIF.
;
	ASIGN8.	(CKAFLG),0
	ASIGN8.	(CTLOOP),0
	ASIGN8.	(WAIT1),0
	ASIGN8.	(FNE),054H	;RESET FOR NEXT TIME
	ASIGN8.	(CRSE),0
	ASIGN8.	(ALT),0
;
	RET	
;
GHOEAT: PCALL	AUDIOWR,9,0
	PCALL	AUDIOWR,8,0
	IF8.	(SECFLG),.EQ.,1		;SET GHOFLG=1 AND THIS SOUND ROUTINE
	  IF8.	(SWT),.EQ.,1		;WILL RUN TO COMPLETION AND THEN SET
	  JP	SECPRT			;GHOFLG=0
	  ENDIF.
	JP	LB
	ENDIF.
;
	IF8.	(KT),.NE.,0
	JP	GELP
	ENDIF.
;
	PCALL	AUDIOWR,4,0F4H
	PCALL	AUDIOWR,5,01H
	PCALL	AUDIOWR,10,0FH
;
GELP:	LD	A,(SWITCH)
	XOR	1
	LD	(SWITCH),A
	RET	Z
;
	LD	HL,(FPA)	;TAKES FINE AND COARSE (NEXT BYTE IN TABLE)
	AND	A		;CLEAR CARRY FLAG
	LD	BC,0FH		
	ADC	HL,BC
	LD	(FPA),HL	;REPLACE IN FINE AND COARSE
;
	PCALL	AUDIOWR,4,(FPA)
	PCALL	AUDIOWR,5,(CPA)
;
	ADD8.	(KT),1			;DO THIS TOP PART THREE TIMES
	IF8.	(KT),.LT.,3
	JP	GELP
	ENDIF.
;
	ASIGN8.	(SECFLG),1
;
	LD	BC,02EEH
	LD	(FPA),BC
;
	PCALL 	AUDIOWR,4,(FPA)
	PCALL	AUDIOWR,5,(CPA)
;
LB:	LD	HL,(FPA)	;TAKES FINE AND COARSE (NEXT BYTE IN TABLE)
	AND	A		;CLEAR CARRY FLAG
	LD	BC,05AH		
	SBC	HL,BC
	LD	(FPA),HL	;REPLACE IN FINE AND COARSE
;
	LD	A,(SWT)
	XOR	1
	LD	(SWT),A
	RET	
;	
SECPRT:	LD	A,(SWT)
	XOR	1
	LD	(SWT),A
;
	LD	HL,(FPA)	;TAKES FINE AND COARSE (NEXT BYTE IN TABLE)
	AND	A		;CLEAR CARRY FLAG
	LD	BC,032H		
	ADC	HL,BC
	LD	(FPA),HL	;REPLACE IN FINE AND COARSE
;
	PCALL	AUDIOWR,4,(FPA)
	PCALL	AUDIOWR,5,(CPA)
;
	ADD8.	(LBKT),1
	IF8.	(LBKT),.LT.,16D
	JP	LB
	ENDIF.
;
	PCALL	AUDIOWR,4,0
	PCALL	AUDIOWR,5,0	
	PCALL	AUDIOWR,10,0	
;
	ASIGN8.	(GHOFLG),0
	ASIGN8.	(FPA),0F4H
	ASIGN8.	(CPA),01H
	ASIGN8.	(SWITCH),00
	ASIGN8.	(KT),0
	ASIGN8.	(SWT),0
	ASIGN8.	(LBKT),0
	ASIGN8.	(SECFLG),0
;
	RET
;
FRTGLP:	IF8.	(FIVE),.EQ.,1
	JP	FIVHUN
	ENDIF.
;
	IF8.	(FIVE),.EQ.,2
	JP	MIDPRT
	ENDIF.
;	
	IF8.	(WT),.EQ.,1
	JP	LBG
	ENDIF.
;
	IF8.	(LAGKT),.EQ.,1
	JP	LAG
	ENDIF.
;
	IF8.	(WTE),.NE.,0
	JP	ENDPRT
	ENDIF.
;
	PCALL	AUDIOWR,4,02CH
	PCALL	AUDIOWR,5,01H
	PCALL	AUDIOWR,10,0CH
;
	LD	A,(SW)
	XOR	1
	LD	(SW),A
	RET	NZ
;
	PCALL	AUDIOWR,4,090H
	ASIGN8.	(FIVE),1
	RET
;
FIVHUN:	PCALL	AUDIOWR,4,0F4H
	ASIGN8.	(FIVE),2
	RET
;
MIDPRT:	ASIGN8.(FIVE),0
	PCALL	AUDIOWR,4,0EEH
	PCALL	AUDIOWR,5,02H
	PCALL	AUDIOWR,10,0DH
;
LAG:	SUB8.	(AA),1
	PCALL	AUDIOWR,10,(AA)
;
LBG:	LD	HL,(FTONE)	;TAKES FINE AND COARSE (NEXT BYTE IN TABLE)
	AND	A		;CLEAR CARRY FLAG
	LD	BC,03CH		
	ADC	HL,BC
	LD	(FTONE),HL	;REPLACE IN FINE AND COARSE
;
	PCALL	AUDIOWR,4,(FTONE)
	PCALL	AUDIOWR,5,(CTONE)
;
	LD	A,(WT)
	XOR	1
	LD	(WT),A
	RET	NZ
;
	LD	A,(LAGKT)
	XOR	1
	LD	(LAGKT),A
	RET	NZ
;
	PCALL	AUDIOWR,4,04CH
	PCALL	AUDIOWR,5,04H
	PCALL	AUDIOWR,10,0AH
;
	ASIGN8.	(FTONE),04CH
	ASIGN8.	(CTONE),04H
;
ENDPRT:	LD	HL,(FTONE)	;TAKES FINE AND COARSE (NEXT BYTE IN TABLE)
	AND	A		;CLEAR CARRY FLAG
	LD	BC,064H		
	SBC	HL,BC
	LD	(FTONE),HL	;REPLACE IN FINE AND COARSE
;
	PCALL	AUDIOWR,4,(FTONE)
	PCALL	AUDIOWR,5,(CTONE)
;
	ADD8.	(WTE),1
	IF8.	(WTE),.LT.,5
	RET
	ENDIF.
;
	PCALL	AUDIOWR,4,0
	PCALL	AUDIOWR,5,0
	PCALL	AUDIOWR,10,0
;
	ASIGN8.	(FRTFLG),0
	ASIGN8.	(FTONE),0EEH
	ASIGN8.	(CTONE),02H
	ASIGN8.	(WT),0
	ASIGN8.	(WTE),0
	ASIGN8.	(SW),0
	ASIGN8.	(AA),0DH
	ASIGN8.	(FIVE),0
	ASIGN8.	(LAGKT),0
;
	RET
;
;  POWER PILL ACTIVATION
PPILL::		
	IF8.	(PART2),.EQ.,1
	JP	PTWO
	ENDIF.
;
	IF8.	(GB1),.EQ.,1
	JP	BLABEL
	ENDIF.
;
	PCALL	AUDIOWR,4,058H
	PCALL	AUDIOWR,5,02H
	PCALL	AUDIOWR,9,08H
;
ALABEL:	ADD8.	(AMPTD),1
	PCALL	AUDIOWR,10,(AMPTD)
;
BLABEL:	LD	A,(WT1)
	XOR	1
	LD	(WT1),A
	JP	Z,DOTHIS
;
	LD	HL,(FQUENCE)	;TAKES FINE AND COARSE (NEXT BYTE IN TABLE)
	AND	A		;CLEAR CARRY FLAG
	LD	BC,032H		
	SBC	HL,BC
	LD	(FQUENCE),HL	;REPLACE IN FINE AND COARSE
;
	PCALL	AUDIOWR,4,(FQUENCE)
	PCALL	AUDIOWR,5,(CQUENCE)
;
	LD	A,(GB1)
	XOR	1
	LD	(GB1),A
	JP	NZ,DOTHIS
;
	ADD8.	(LOOP1),1
	IF8.	(LOOP1),.LT.,3
	ASIGN8.	(WT1),0
	JP	ALABEL
	ENDIF.
;
	ASIGN8.	(PART2),1
;
PTWO:	IF8.	(GB2),.EQ.,1
	JP	BLBEL1
	ENDIF.
;
	PCALL	AUDIOWR,4,05H
	PCALL	AUDIOWR,5,0H
	PCALL	AUDIOWR,10,0DH
;
	ASIGN8.	(AMPTD),0DH
	ASIGN8.	(FQUENCE),05H
	ASIGN8.	(CQUENCE),0
;
ALBEL1:	SUB8.	(AMPTD),1
	PCALL	AUDIOWR,10,(AMPTD)
;
BLBEL1:	LD	A,(WT2)
	XOR	1
	LD	(WT2),A
	JP	Z,DOTHIS
;
	LD	HL,(FQUENCE)	;TAKES FINE AND COARSE (NEXT BYTE IN TABLE)
	AND	A		;CLEAR CARRY FLAG
	LD	BC,032H		
	ADC	HL,BC
	LD	(FQUENCE),HL	;REPLACE IN FINE AND COARSE
;
	PCALL	AUDIOWR,4,(FQUENCE)
	PCALL	AUDIOWR,5,(CQUENCE)
;
	LD	A,(GB2)
	XOR	1
	LD	(GB2),A
	JP	NZ,DOTHIS
;
	ADD8.	(LOOP2),1
	IF8.	(LOOP2),.LT.,3
	ASIGN8.	(WT2),0
	JP	ALBEL1
	ENDIF.
;
STPILL::PCALL	AUDIOWR,4,0
	PCALL	AUDIOWR,5,0
	PCALL	AUDIOWR,10,0
;
	ASIGN8.	(FQUENCE),058H
	ASIGN8.	(CQUENCE),02H
	ASIGN8.	(AMPTD),08H
	ASIGN8.	(WT1),0
	ASIGN8.	(WT2),0
	ASIGN8.	(LOOP1),0
	ASIGN8.	(LOOP2),0
	ASIGN8.	(PART2),0
	ASIGN8.	(GB1),0
	ASIGN8.	(GB2),0
;
;
	JP	DOTHIS
		END
