;*****************************************************************
;*                                                               *
;*    FILE NAME:         CLYMOV.MAC                              *
;*                                                               *
;*    MODULE PART NO.: 73-90034420 NAME:  PAC MAN 		 *
;*                                                               *
;*    FILE DESCRIPTION:                                          *  
;*      This contains the personality logic for CLYDE,           *
;*      the dark yellow ghost                                    *
;*                                                               *
;*                                                               *
;*                                                               *
;*                                                               *
;*                                                               *
;*    PROGRAMMER: L. Binkowski                                   *
;*                                                               *
;*    ENVIRONMENT- Development Machine: NABU 1100, MCP 1.8       *
;*                                                               *
;*               - Assembler: MACRO-80                           *
;*                                                               *
;*                                                               *
;*****************************************************************
;*                                                               *
;*    REVISION HISTORY: (current first)                          *
;*                                                               *
;*    Rev.    Date       Created By         Revision Details     *
;*    ---  ----------  ---------------  -----------------------  *
;*    02   19 OCT 83	L. Binkowski	change to relate code	 *
;*                                                               *
;*    01   04 OCT 83    L. Binkowski    Initial release to spec  *
;*                                                               *
;*****************************************************************
 	;
	.Z80
	.PRINTX	/CLYDE'S MOVEMENT ROUTINES....OCTOBER 19, 1983/
	.RADIX	10
	.XLIST
	INCLUDE PACMAN.EQU
	INCLUDE COMMON.MRO
	INCLUDE	ARITH.MRO
	INCLUDE STRUCT.MRO
	INCLUDE	LINKTAB.EXA
	INCLUDE SUPRTASK.MRO
CLYTIMR::DS	1	;TIMER FOR WHEN CLYDE SHOULD COME OUT
CSICK::	 DB	FALSE	;CLYDE SICK FLAG
CQFLG::	DB	00H
	EXTRN	CLYDIR,CLYST,OPTDIR,GHODIR,XDIF,YDIF,XLINE,YLINE,EYES,TMP
	EXTRN	XLINE,YLINE,BESTX,BESTY,OLDIR,CLYPX,CLYX,CLYY,RELATE
	EXTRN	CLYPAT,CLYX,CLYY,LASTC,LAST2C,PGHOMX,FINDP,RSTPAT,PGHOMY
	EXTRN	TMPX,TMPY,XMDFY,YMDFY,OFFPAT,DEADFL,PWRTIMR,GHOFLG,EYEFLG
	EXTRN	CLYHIT,HTOD,DISCOR,UPFL,DNFL,LTFL,RTFL,ABS,CLYTCB,PACX
	EXTRN	MOVGHO,FINDIR,CHADIR,CHA1DIR,FINREV,NOREV,REVFL,SMOVGH
	EXTRN	HMOVGHO,CHDIR,GHOHIT,STFL,HOMEDIR,SGVAL,SGPAT,LCDIR,CLYDEL
	EXTRN	CREV1F,PACX,PACY,CKQUAD,QUADAD,CKREL
	.LIST	
CLYMOV::
	ASIGN8. (LCDIR),(CLYDIR)
	LD	A,(CLYST)		;GET CLYY'S STATUS
	CP	SICK			;IS HE SICK?
	JP	Z,SICK_CLYDE		;YES...THEN DO THE SICK ACT
	CP	EATEN			;HAS HE BEEN EATEN WHILE SICK
	JP	Z,HOME_CLYDE		;YES...DO THE GO HOME ACT
	IF8.	(CLYST),.EQ.,HOME	;IF WE ARE HOME THEN BOUNCE UP AND DOWN
	  IF8. (CLYY),.EQ.,4CH
	    ASIGN8. (CLYDIR),10H
	  ENDIF.
	  IF8. (CLYY),.EQ.,54H
	    ASIGN8. (CLYDIR),30H
	  ENDIF.
	  CALL CMOVGH	
	  ADD8. (CLYTIMR),1
	  IF8. (CLYTIMR),.EQ.,90	;IF IT'S TIME TO LEAVE THEN GO TOWARDS
	    ASIGN8. (CLYST),GETOUT	;THE DOOR
	  ENDIF.
	  RET
	ELSE.
          IF8. (CLYST),.EQ.,GETOUT		;IF WE ARE SUPPOSED TO GET OUT
	    PCALL HOMEDIR,(CLYX),(CLYY),0
	    IF8. (CLYX),.NE.,7AH		;IF NOT LINED UP WITH THE
	      IF8.(LTFL),.EQ.,TRUE		;DOOR THEN LINE US UP
	        ASIGN8. (CLYDIR),20H
	      ELSE.
	        ASIGN8. (CLYDIR),00H
	      ENDIF.
	    ELSE.
	      IF8. (CLYY),.NE.,3CH		;IF NOT OUT THE DOOR THEN
	        IF8. (DNFL),.EQ.,TRUE		;GO TOWARD THE DOOR
		  ASIGN8. (CLYDIR),10H
	        ELSE.
	          ASIGN8. (CLYDIR),30H
	        ENDIF.
	      ELSE.
		ASIGN8. (CLYDIR),20H
		IF8. (CSICK),.EQ.,TRUE
		  ASIGN8. (CLYST),SICK
		ELSE.
		  IF8.	(CQFLG),.EQ.,FALSE
		    ASIGN8. (CLYST),OK
		  ELSE.
	   	    ASIGN8. (CLYST),GOQUAD
		    ASIGN8. (CQFLG),00H
		  ENDIF.
		ENDIF.
	      ENDIF.
	    ENDIF.
  	    CALL CMOVGH
	    RET
	  ELSE.
	    IF8. (CLYST),.EQ.,GETIN		;IF ARRIVED AT ENTRANCE TO
	      ASIGN8. (CLYDIR),10H		;HIDEOUT THEN GO IN
	      PCALL HMOVGHO,CLYX,(CLYDIR),CLYDE
	      IF8. (CLYY),.EQ.,4CH
		CALL CLYRST
		ASIGN8. (CLYTIMR),00H
	      ENDIF.
	      RET
	    ENDIF.
	  ENDIF.
	ENDIF.
	;
	; This is the movement routine for CLYDE, the dark yellow ghost.  His
	; strategy is to seek you out and get you, only if you are within
	; a certain distance, otherwise he will follow a course dependant
	; on the position of the other ghosts. As with the other ghosts
	; he will only reverse if he gets a go to quadrant command.
	; He also has the lowest priority as far as chasing the pacman goes.
	;
	IF8.	(CLYST),.EQ.,GOQUAD
	  PCALL	HOMEDIR,(CLYX),(CLYY),CLYDE
	  PCALL	CKQUAD,CLYX,QUADAD+8
	  JR	NZ,QUCKCL
	  ASIGN8. (CLYST),OK
QUCKCL:	  ASIGN8. (GHODIR),(OPTDIR)
	  LD	A,(CREV1F)
	  AND	A
	  ASIGN8. (CREV1F),00H
	  JP Z,CREVCK
	  PCALL	GHOHIT,(CLYX),(CLYY)
	  LD	 A,(CHDIR)
	  AND	A
	  JP	NZ,CLYCD
	  JP	MOVCLY
	ELSE.
	  LD	L,28H
	  PCALL	CKREL,CLYX,PACX
	  JR	NZ,NEWDIR
	  PCALL	FINDIR,(CLYX),(CLYY),0	;FIND THE OPTIMUM DIRECTION
	  JP	CREVCK
NEWDIR:PCALL	FINDIR,(CLYX),(CLYY),BLINKY
	PCALL	CHA1DIR,(CLYX),(CLYY),(CLYDIR)
	LD	A,(OPTDIR)
	LD	C,A
	LD	A,(CLYDIR)
	CP	C
	JP	Z,NOCLY
	;
	ASIGN8.	(OLDIR),(CLYDIR)
	PCALL	FINDIR,(CLYX),(CLYY),BLINKY	;FIND THE OPTIMUM DIRECTION
	PCALL	FINREV,(OPTDIR)
	LD	(OPTDIR),A
	LD	(GHODIR),A
	PCALL	GHOHIT,(CLYX),(CLYY)	;THERE A WALL THERE?
	LD	A,(CHDIR)		;GET THE CHANGE DIRECTION FLAG
	CP	TRUE			;IS IT SET?
	JP	NZ,CCHKRV		;GO ANOTHER DIRECTION THEN
	LD	A,(XLINE)		
	CP	TRUE
	JP	Z,CHKCLY
	LD	A,(YLINE)
	CP	TRUE
	JP	Z,CHKCLY
	JP	CCLYCD
CCHKRV:	PCALL	NOREV,(OPTDIR),(CLYDIR)	;SEE IF WE HAVE TO REVERSE DIRECTION
	ASIGN8.	(GHODIR),(CLYDIR)
	LD	A,(REVFL)		;GET THE REVERSE FLAG
	CP	TRUE			;IS IT SET?
	JP	NZ,MOVCLY		;NO....THEN MOVE HIM
CCLYCD::CALL	CHADIR		;YES...CHANGE IT TO A DIFFERENT DIRECTION
	PCALL	FINREV,(OPTDIR)
	LD	(OPTDIR),A
	PCALL	NOREV,(OLDIR),(OPTDIR)
	LD	A,(REVFL)
	CP	TRUE
	JP	Z,CNEWDR
	ASIGN8.	(GHODIR),(OPTDIR)	;GET THE OPTIMUM DIRECTION
	PCALL	GHOHIT,(CLYX),(CLYY)	;CHECK FOR WALLS IN THAT DIRECTION
	LD	A,(CHDIR)		;GET THE CHANGE DIRECTION FLAG
	CP	TRUE			;IS IT SET?
	JP	NZ,MOVCLY		;NO....THEN MOVE HIM
	ASIGN8.	(GHODIR),(CLYDIR)
	LD	(OPTDIR),A
	PCALL	GHOHIT,(CLYX),(CLYY)
	LD	A,(CHDIR)
	CP	TRUE
	JP	NZ,MOVCLY
CNEWDR:
	ASIGN8.	(GHODIR),(OLDIR)	;IF HE CAN'T MOVE IN THE OPTIMUM
	PCALL	GHOHIT,(CLYX),(CLYY)	;DIRECTIONS, MOVE HIM FORWARD TO HIS
	LD	A,(CHDIR)		;DEATH
	CP	TRUE
	JP	Z,CDOAD
	ASIGN8.	(CLYDIR),(OLDIR)
	JP	NOCLY
CDOAD:	PCALL	CHA1DIR,(CLYX),(CLYY),(OLDIR)	;TRY ANOTHER DIRECTION
	JP	MOVCLY
	ENDIF.
CREVCK:	ASIGN8.	(GHODIR),(OPTDIR)	;PUT OPTDIR INTO GHODIR
	PCALL	GHOHIT,(CLYX),(CLYY)	;THERE A WALL THERE?
	LD	A,(CHDIR)		;GET THE CHANGE DIRECTION FLAG
	CP	TRUE			;IS IT SET?
	JP	NZ,CHKRV		;GO ANOTHER DIRECTION THEN
	LD	A,(XLINE)		
	CP	TRUE
	JP	Z,CHKCLY
	LD	A,(YLINE)
	CP	TRUE
	JP	Z,CHKCLY
	JP	CLYCD
CHKRV:	PCALL	NOREV,(OPTDIR),(CLYDIR)	;SEE IF WE HAVE TO REVERSE DIRECTION
	ASIGN8.	(GHODIR),(CLYDIR)
	LD	A,(REVFL)		;GET THE REVERSE FLAG
	CP	TRUE			;IS IT SET?
	JP	NZ,MOVCLY		;NO....THEN MOVE HIM
CLYCD::	CALL	CHADIR		;YES...CHANGE IT TO A DIFFERENT DIRECTION
	PCALL	NOREV,(CLYDIR),(OPTDIR)
	LD	A,(REVFL)
	CP	TRUE
	JP	Z,CANOTH
	ASIGN8.	(GHODIR),(OPTDIR)	;GET THE OPTIMUM DIRECTION
	PCALL	GHOHIT,(CLYX),(CLYY)	;CHECK FOR WALLS IN THAT DIRECTION
	LD	A,(CHDIR)		;GET THE CHANGE DIRECTION FLAG
	CP	TRUE			;IS IT SET?
	JP	NZ,MOVCLY		;NO....THEN MOVE HIM
	ASIGN8.	(GHODIR),(CLYDIR)
	LD	(OPTDIR),A
	PCALL	GHOHIT,(CLYX),(CLYY)
	LD	A,(CHDIR)
	CP	TRUE
	JP	NZ,MOVCLY
CANOTH:	PCALL	CHA1DIR,(CLYX),(CLYY),(CLYDIR)	;TRY ANOTHER DIRECTION
	LD	A,(STFL)		;GET THE STOP FLAG
	CP	TRUE			;IS IT SET?
	JP	Z,NOCLY			;YES...DON'T MOVE HIM
MOVCLY::
	ASIGN8. (CLYDIR),(OPTDIR)	;MAKE THE OPTIMUM CLYDE'S DIRECTION
NOCLY::	CALL	CMOVGH			;GO TO IT CLYDE!
	PCALL	ABS,(PACX),(CLYX)
	CP	08H
	JR	C,C1CNT
	RET
C1CNT:	PCALL	ABS,(PACY),(CLYY)
	CP	03H
	RET	NC
C3CNT:	ASIGN8.	(DEADFL),TRUE
	RET
C2CNT:	PCALL	ABS,(PACY),(CLYY)
	CP	08H
	RET	NC
	JR	C3CNT
CHKCLY::ASIGN8.	(GHODIR),(CLYDIR)
	PCALL	GHOHIT,(CLYX),(CLYY)
	LD	A,(CHDIR)
	CP	TRUE
	JP	Z,CLYCD
	JP	NOCLY
RSTCLY::
        PCALL RSTPAT,CLYPX,(CLYDIR)
	ASIGN8. (LASTC),0FFH
	RET
CMOVGH::
	IF8. (CSICK),.EQ.,FALSE
	  CALL	CLYDEL
	  PCALL	SPCOLR,8,WHITE		;MAKE SURE THE COLORS ARE SET
	  PCALL	SPCOLR,4,DYELLOW
	  IF8. (CLYDIR),.NE.,(LCDIR)
	    SPEED CLYTCB,-1
	    IF8. (LASTC),.NE.,0FFH
	    CALL RSTCLY
	    ENDIF.
	  ENDIF.
	  IF8.	(CLYY),.EQ.,4CH
	    IF8. (CLYX),.GE.,0CCH
	      SPEED CLYTCB,-2
	    ENDIF.
	    IF8. (CLYX),.LE.,26H
	      SPEED CLYTCB,-2
	    ENDIF.
	  ENDIF.
;	  IF8. (CLYX),.GT.,0E0H
;	    JP	CSMOVE
;	  ENDIF.
;	  IF8.	(CLYX),.LT.,010H
;	    JP	CSMOVE
;	  ENDIF.
	   IF8.	(CLYST),.EQ.,GETOUT
	     JP CSMOVE
	   ENDIF.
;	   PCALL RELATE,CLYX,PACX
;	   JP Z,CSMOVE
	   LD	A,(CLYDIR)
	   AND	A
	   JP	Z,CXLRIGHT
	   CP	20H
	   JP	Z,CXLRIGHT
	   JP	CYLRIGHT
CXLRIGHT:: PCALL PGHOMX,CLYX,(CLYDIR),CLYDE
	   RET
CYLRIGHT:: PCALL PGHOMY,CLYX,(CLYDIR),CLYDE
	   RET
CSMOVE::    IF8. (LASTC),.NE.,0FFH
	      CALL RSTCLY      
	      ASIGN8. (LASTC),0FFH
	    ENDIF.
	    PCALL MOVGHO,CLYX,(CLYDIR),CLYDE
	ELSE.
	  IF8. (LASTC),.NE.,0FFH
	    CALL RSTCLY
	  ENDIF.
	  PCALL SMOVGH,CLYX,(CLYDIR),CLYDE
	ENDIF.
	RET
SICK_CLYDE::
	;This is the routine that will be executed for blinky while sick
	;
	PCALL	FINDIR,(CLYX),(CLYY),0
	PCALL	CHA1DIR,(CLYX),(CLYY),(CLYDIR)
	LD	A,(OPTDIR)
	LD	C,A
	LD	A,(CLYDIR)
	CP	C
	JP	Z,SNOCLY
	;
	ASIGN8.	(OLDIR),(CLYDIR)
	PCALL	FINDIR,(CLYX),(CLYY),0	;FIND THE OPTIMUM DIRECTION
	PCALL	FINREV,(OPTDIR)
	LD	(OPTDIR),A
	LD	(GHODIR),A
	PCALL	GHOHIT,(CLYX),(CLYY)	;THERE A WALL THERE?
	LD	A,(CHDIR)		;GET THE CHANGE DIRECTION FLAG
	CP	TRUE			;IS IT SET?
	JP	NZ,SCHKRV		;GO ANOTHER DIRECTION THEN
	LD	A,(XLINE)		
	CP	TRUE
	JP	Z,SCHKCLY
	LD	A,(YLINE)
	CP	TRUE
	JP	Z,SCHKCLY
	JP	SCLYCD
SCHKRV:	PCALL	NOREV,(OPTDIR),(CLYDIR)	;SEE IF WE HAVE TO REVERSE DIRECTION
	ASIGN8.	(GHODIR),(CLYDIR)
	LD	A,(REVFL)		;GET THE REVERSE FLAG
	CP	TRUE			;IS IT SET?
	JP	NZ,SMVCLY		;NO....THEN MOVE HIM
SCLYCD::CALL	Z,CHADIR		;YES...CHANGE IT TO A DIFFERENT DIRECTION
	PCALL	FINREV,(OPTDIR)
	LD	(OPTDIR),A
	PCALL	NOREV,(OLDIR),(OPTDIR)
	LD	A,(REVFL)
	CP	TRUE
	JP	Z,SNEWDR
	ASIGN8.	(GHODIR),(OPTDIR)	;GET THE OPTIMUM DIRECTION
	PCALL	GHOHIT,(CLYX),(CLYY)	;CHECK FOR WALLS IN THAT DIRECTION
	LD	A,(CHDIR)		;GET THE CHANGE DIRECTION FLAG
	CP	TRUE			;IS IT SET?
	JP	NZ,SMVCLY		;NO....THEN MOVE HIM
	ASIGN8.	(GHODIR),(CLYDIR)
	LD	(OPTDIR),A
	PCALL	GHOHIT,(CLYX),(CLYY)
	LD	A,(CHDIR)
	CP	TRUE
	JP	NZ,SMVCLY
SNEWDR:
	ASIGN8.	(GHODIR),(OLDIR)	;IF HE CAN'T MOVE IN THE OPTIMUM
	PCALL	GHOHIT,(CLYX),(CLYY)	;DIRECTIONS, MOVE HIM FORWARD TO HIS
	LD	A,(CHDIR)		;DEATH
	CP	TRUE
	JP	Z,SDOAD
	ASIGN8.	(CLYDIR),(OLDIR)
	JP	SNOCLY
SDOAD:	PCALL	CHA1DIR,(CLYX),(CLYY),(OLDIR)	;TRY ANOTHER DIRECTION
SMVCLY::ASIGN8.	(CLYDIR),(OPTDIR)
SNOCLY::SPEED	CLYTCB,-2
	PCALL	SMOVGH,CLYX,(CLYDIR),CLYDE	;MOVE THE SICK CLYY IN THAT DIRECTION
	PCALL	CKREL,PACX,CLYX,07H
	RET	NZ
	    ASIGN8. (CLYHIT),TRUE
	    ASIGN8. (CLYST),EATEN
	    ASIGN8. (CSICK),FALSE
     	    ASIGN8. (GHOFLG),TRUE
	    ADD8.   (SGPAT),04H
	    PCALL   SPNAME,4,(SGPAT)
	    PCALL   SPCOLR,4,WHITE
	    PCALL   SPCOLR,8,WHITE	
	    LD	    A,(SGVAL)
	    SLA	    A
	    LD	    (SGVAL),A
	    IF8.    (SGVAL),.EQ.,0
	      ASIGN16. (SGVAL),160H
	    ENDIF.
	    PCALL   HTOD,(SGVAL)
	    CALL    DISCOR
	RET
SCHKCLY::ASIGN8. (GHODIR),(CLYDIR)
	PCALL	GHOHIT,(CLYX),(CLYY)
	LD	A,(CHDIR)
	CP	TRUE
	JP	Z,SCLYCD
	JP	SNOCLY
HOME_CLYDE::
	ASIGN8.	(EYEFLG),TRUE
	ASIGN8.	(CLYTCB+3),1
CLYHM::	PCALL	HOMEDIR,(CLYX),(CLYY),0	;FIND THE OPTIMUM DIRECTION
	ASIGN8.	(GHODIR),(OPTDIR)	;PUT OPTDIR INTO GHODIR
	PCALL	GHOHIT,(CLYX),(CLYY)	;THERE A WALL THERE?
	LD	A,(CHDIR)		;GET THE CHANGE DIRECTION FLAG
	CP	TRUE			;IS IT SET?
	JP	NZ,HHKRV		;GO ANOTHER DIRECTION THEN
	LD	A,(XLINE)		
	CP	TRUE
	JP	Z,HHKCLY
	LD	A,(YLINE)
	CP	TRUE
	JP	Z,HHKCLY
	JP	HCLYCD
HHKRV:	PCALL	NOREV,(OPTDIR),(CLYDIR)	;SEE IF WE HAVE TO REVERSE DIRECTION
	ASIGN8.	(GHODIR),(CLYDIR)
	LD	A,(REVFL)		;GET THE REVERSE FLAG
	CP	TRUE			;IS IT SET?
	JP	NZ,HMOVCLY		;NO....THEN MOVE HIM
HCLYCD::CALL	Z,CHADIR		;YES...CHANGE IT TO A DIFFERENT DIRECTION
	ASIGN8.	(GHODIR),(OPTDIR)	;GET THE OPTIMUM DIRECTION
	PCALL	GHOHIT,(CLYX),(CLYY)	;CHECK FOR WALLS IN THAT DIRECTION
	LD	A,(CHDIR)		;GET THE CHANGE DIRECTION FLAG
	CP	TRUE			;IS IT SET?
	JP	NZ,HMOVCLY		;NO....THEN MOVE HIM
	ASIGN8.	(GHODIR),(CLYDIR)
	LD	(OPTDIR),A
	PCALL	GHOHIT,(CLYX),(CLYY)
	LD	A,(CHDIR)
	CP	TRUE
	JP	NZ,HMOVCLY
	PCALL	CHA1DIR,(CLYX),(CLYY),(CLYDIR)	;TRY ANOTHER DIRECTION
	LD	A,(STFL)		;GET THE STOP FLAG
	CP	TRUE			;IS IT SET?
	JP	Z,HNOCLY			;YES...DON'T MOVE HIM
HMOVCLY::
	ASIGN8. (CLYDIR),(OPTDIR)	;MAKE THE OPTIMUM CLYDE'S DIRECTION
HNOCLY::PCALL	HMOVGHO,CLYX,(CLYDIR),CLYDE	;GO TO IT CLYDE!
	IF8.	(CLYX),.EQ.,78H
	  IF8.    (CLYY),.EQ.,3CH
	    ASIGN8. (CLYST),GETIN
	  ENDIF.
	ENDIF.
	RET
CLYRST::ASIGN8.	(CLYST),HOME
	ASIGN8.	(CLYHIT),FALSE
	ASIGN8.	(DEADFL),FALSE
	ASIGN8.	(CLYX),94H
	ASIGN8.	(CLYY),4CH
	ASIGN8. (CLYDIR),10H
	PCALL	SPMOVE,4,(CLYY),(CLYX)
	PCALL	SPMOVE,8,(CLYY),(CLYX)
	PCALL	SPNAME,4,0C0H
	PCALL	SPNAME,8,40H
	PCALL	SPCOLR,8,WHITE
	PCALL	SPCOLR,4,DYELLOW
	RET
HHKCLY::ASIGN8.	(GHODIR),(CLYDIR)
	PCALL	GHOHIT,(CLYX),(CLYY)
	LD	A,(CHDIR)
	CP	TRUE
	JP	NZ,HCLYCD
	JP	NOCLY
	END
