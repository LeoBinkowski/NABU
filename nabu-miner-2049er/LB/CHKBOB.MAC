;*****************************************************************
;*                                                               *
;*    FILE NAME:             CHKBOB.MAC    	                 *
;*                                                               *
;*    MODULE PART NO.: 73-90034420 NAME:  MINER 2049er 		 *
;*                                                               *
;*    FILE DESCRIPTION:                                          *  
;*                                                               *
;*      THIS FILE DOES THE POSITION CHECKING FOR MINER 2049er    *
;*                                                               *
;*                                                               *
;*                                                               *
;*                                                               *
;*                                                               *
;*    PROGRAMMER: L. Binkowski                                   *
;*                                                               *
;*    ENVIRONMENT- Development Machine: NABU 1100, MCP 1.8       *
;*                                                               *
;*               - Assembler: MACRO-80                           *
;*                                                               *
;*                                                               *
;*****************************************************************
;*                                                               *
;*    REVISION HISTORY: (current first)                          *
;*                                                               *
;*    Rev.    Date       Created By         Revision Details     *
;*    ---  ----------  ---------------  -----------------------  *
;*    02   29 JUN 84    L. Binkowski	fixed jump/ adj lad bug  *
;*                                                               *
;*    01   14 MAY 84    L. Binkowski    Initial release to spec  *
;*                                                               *
;*****************************************************************
	.Z80
	.XLIST
	INCLUDE	COMMON.MRO
	INCLUDE	STRUCT.MRO
	INCLUDE	LINKTAB.EXA
	INCLUDE	MINER.EQU
	INCLUDE	ARITH.MRO
	;
	EXTRN	LT_CAN_GO,RT_CAN_GO,BOB_STATUS,BOBX,BOBY,CATWALK,NO_UP
	EXTRN	SLIPTR,SLITAB,SUBABS,CHKCOOR,ONCOOR,JOY_UP,JOY_DOWN,JOY_LEFT
	EXTRN	AT_TOP,AT_BOT,ON_LADDER,NEAR_TOP,LADDER,LADTAB,JOY_RIGHT
	EXTRN	TRLEV,TRTIMR,TRRTAB,TRGOX,TRGOY,TRFRX,TRFRY,PRELEV,RADIOACTIVE
	EXTRN	TRENTPTR,TRSEG,TRRTBL,CKCAT,MBSPR,UPGOING,TONNAG,CKLIM,SBEAM
	EXTRN	ONPLAT,PLATSP,PLTCHK,PLTX,PLTY,LIFTX,LIFTY,CANX,CANY,CANNON
	;
	SDEMATR	EQU	1	;SET SOUND FOR BEAM TO DEMATERIALIZE
	LXINWASTE EQU	27H	;X LIMIT FOR IN WASTE
	RXINWASTE EQU	0CAH	;X RIGHT LIMIT FOR IN WASTE
	DNINWASTE EQU	0A2H	;DOWN LIMIT FOR IN WASTE
TMP16::	DW	0000H
LADTPTR::DW	0000H
LTOPX::	DB	00H
LTOPY::	DB	00H
LBOTX::	DB	00H
LBOTY::	DB	00H
TMPX::	DB	00H
TMPY::	DB	00H
CWX1CK:	DB	00H
CWX2CK:	DB	00H
CWYCK:	DB	00H
ONLIFT::DB	00H
IN_CHECK::DB	00H
;
;
;		ROUTINE NAME:	CHKBOB
;		FILE NAME:	CHKBOB.MAC
;		AUTHOR:		Leo Binkowski
;		DATE:
;
;	DESCRIPTION:
;
;	This routine will set a bunch of flags pertaining to BOB
;	it is called only once at the beginning of the BOB_CONTROL
;	task, since it takes a relatively long time to execute.
;
;	PARAMETERS PASSED:
;				
;	PARAMETERS RETURNED:
;
;	GLOBALS ACESSED:
;
;	COMMENTS AND WARNINGS:
CHKBOB::
	ASIGN8.	(CATWALK),FALSE	;CLEAR ALL FIRST
	LD	(CANNON),A
	LD	(ONLIFT),A
	LD	(NO_UP),A
	ASIGN8.	(LT_CAN_GO),TRUE
	LD	(RT_CAN_GO),A
		;
	LD	A,(BOBX)	;NOW MAKE SOME MINOR ADJUSTMENTS
	ADD	A,XADJUST
	LD	(TMPX),A
	LD	A,(BOBY)
	ADD	A,YADJUST
	LD	(TMPY),A
	;
	LD	BC,(BOBX)	;CHECK FOR LIMITS (PER JOAQUIN)
	DEC	C
	LD	DE,(BOBY)	;FIRST CHECK IF TOO FAR LEFT
	CALL	CKLIM
	AND	A
	JR	Z,NXT1CK
	;
	ASIGN8.	(LT_CAN_GO),FALSE
NXT1CK:
	LD	BC,(BOBX)	;SEE IF TOO FAR RIGHT
	INC	C
	LD	DE,(BOBY)
	CALL	CKLIM
	AND	A
	JR	Z,NXT2CK
	;
	ASIGN8.	(RT_CAN_GO),FALSE
	;
NXT2CK:
	LD	BC,(BOBX)	;NOW IF SITTING ON A ROOF
	LD	DE,(BOBY)
	INC	E
	INC	E
	CALL	CKLIM
	AND	A
	JR	Z,NXTTOG
	;
	ASIGN8.	(CATWALK),TRUE
	;
NXTTOG:
	LD	BC,(BOBX)
	LD	DE,(BOBY)
	DEC	E
	CALL	CKLIM
	AND	A
	JR	Z,NXT1TG
	;
	ASIGN8.	(NO_UP),TRUE
	;
NXT1TG:	
;	IF8.	(TMPX),.LE.,8		;MAKE SURE BOB CAN'T GO PAST THE SIDES
;	  ASIGN8. (LT_CAN_GO),FALSE
;	ELSE.
;	  ASIGN8. (LT_CAN_GO),TRUE
;	ENDIF.
;	;
;	IF8.	(TMPX),.GE.,0F8H
;	  ASIGN8. (RT_CAN_GO),FALSE
;	ELSE.
;	  ASIGN8. (RT_CAN_GO),TRUE
;	ENDIF.
;	;
	;
	LD	A,(UPGOING)	;IF JUMPING UP, THEN NOT NECESSARY TO CHECK
	AND	A		;PAST HERE
	RET	NZ

	;
;	
;
;		ROUTINE NAME:	LADCHK
;		FILE NAME:	CHKBOB.MAC
;		AUTHOR:		Leo Binkowski
;		DATE:		FEBRUARY 16, 1984
;	
;	DESCRIPTION:
;
;	THIS ROUTINE IS CALLED WHENEVER THE JOYSTICK IS POINTED UP OR
;	DOWN, DO AS NOT TO TAKE TIME IN THE CHECKING ROUTINE
;
;
;	PARAMETERS PASSED:	NONE
;				
;	PARAMETERS RETURNED:	LADDER	-TRUE	IF LADSDER PRESENT
;					-FALSE  IF NONE
;
;				AT_TOP	-TRUE	IF AT THE TOP OF THE LADDER
;					-FALSE  IF NOT
;
;				NEAR_TOP -TRUE	IF LESS THAN 6 PIXELS FROM THE
;						TOP OF THE LADDER (GOING DOWN)
;					 -FALSE IF NOT
;
;				AT_BOTTOM -TRUE IF AT THE BOTTOM OF THE LADDER
;					  -FALSE IF NOT
;			
;				ON_LADDER -TRUE IF ON THE LADDER BUT NOT
;						NECESSARILY AT THE TOP, BOTTOM.
;					  -FALSE IF NOT
;
;
;	GLOBALS ACESSED:
;
;	COMMENTS AND WARNINGS:
;
;
;
;
;	CATWALK CHECKING
;
	LD	A,(BOBX)
	ADD	A,5
	LD	(CWX1CK),A
	;
	ADD	A,4
	LD	(CWX2CK),A
	;
	LD	A,(BOBY)
	ADD	A,1
	LD	(CWYCK),A
	PCALL	CKCAT,(CWX1CK),(CWYCK)
	LD	C,A
	PUSH	BC
	;
	PCALL	CKCAT,(CWX2CK),(CWYCK)
	POP	BC
	OR	C
	JP	NZ,CATRUE
	;
	LD	A,(CWYCK)
	DEC	A
	LD	E,A
	PCALL	CKCAT,(CWX1CK)
	LD	C,A
	PUSH	BC
	;
	LD	A,(CWYCK)
	DEC	A
	LD	E,A
	PCALL	CKCAT,(CWX2CK)
	POP	BC
	OR	C
	JR	NZ,CUPTRU
	;
	LD	A,(CWYCK)
	INC	A
	LD	E,A
	PCALL	CKCAT,(CWX1CK)
	LD	C,A
	PUSH	BC
	;
	LD	A,(CWYCK)
	INC	A
	LD	E,A	
	PCALL	CKCAT,(CWX2CK)
	POP	BC
	OR	C
	JR	Z,CATFALS
	;
CDNTRU:
	IF8.	(BOB_STATUS),.NE.,SLIDING
	LD	A,(LADDER)
	LD	BC,(JOY_UP)
	AND	C
	JR	NZ,CATRUE
	INC8.	(BOBY)
	ENDIF.
	JR	CATRUE
CUPTRU:
	IF8.	(BOB_STATUS),.NE.,SLIDING
	LD	A,(LADDER)
	LD	BC,(JOY_DOWN)
	AND	C
	JR	NZ,CATRUE
	DEC8.	(BOBY)
	ENDIF.
CATRUE:
	ASIGN8.	(CATWALK),TRUE
	JR	CKPLATS
CATFALS:; ASIGN8. (CATWALK),FALSE
;
CKPLATS:
;	IF8. (TMPY),.EQ.,0BEH		;THERE IS SOMETHING THERE
;	  ASIGN8. (CATWALK),TRUE
;	ENDIF.
	;
	;NOW HOW ABOUT THE PLATFORMS
	;
	XOR	A
	LD	(ONPLAT),A
	LD	IX,PLATSP
	ASIGN8.	(IN_CHECK),TRUE		;FOR STEP ON PLATFORMS, DON'T ACTIVATE
	REPEAT.				;THE LAST ONE
	  LD	A,(IX)	;GET THE Y COORDINATE
	  LD	(PLTY),A
	  LD	A,(IX+1)
	  LD	(PLTX),A
	  CALL	PLTCHK
	  LD	BC,4
	  ADD	IX,BC
	UNTIL8. (PLTY),.EQ.,0C0H
	ASIGN8.	(IN_CHECK),FALSE	;FINISHED CHECK...CONTINUE NORMALLY
	;
	IF8. (ONPLAT),.EQ.,TRUE
	  ASIGN8. (CATWALK),TRUE
	ENDIF.
	;
	;	NOW THE LIFT (IF THERE)
	;
	;
	LD	A,(LIFTY)	;IS THERE A LIFT ON THIS SCREEN?
	AND	A	
	JR	Z,LFTCON	;NO..THEN CONTINUE
	;
	LD	BC,(BOBY)
	CP	C		;IS IT ON THE SAME Y?
	JR	NZ,LFTCON	;NO...CONTINUE
	;
	LD	BC,(TMPX)
	LD	A,(LIFTX)
	SUB	3
	CP	C
	JP	NC,LFTCON
	;
	LD	A,(LIFTX)
	ADD	A,16
	CP	C
	JP	C,LFTCON
	;
	ASIGN8.	(ONLIFT),TRUE
	LD	(CATWALK),A
	;
LFTCON:
	;	NOW THE CANNON (IF THERE)
	;
	;
	LD	A,(CANY)	;IF NOT THERE, THEN MOVE ON
	AND	A
	JP	Z,CANCON
	;
	LD	A,(TONNAG)	;IF NO DYNAMITE, CANNON IS NOT
	AND	A		;REALLY THERE.
	JP	Z,CANCON
	;
	LD	A,(BOBX)	;IS HE  ON THE CANNON'S INITIAL X
	LD	BC,(CANX)
	CP	C
	JP	NZ,CANCON
	;
	LD	BC,(BOBY)	;IS HE ON THE CANNON'S INITIAL Y
	LD	A,(CANY)
	ADD	A,8
	CP	C
	JP	NZ,CANCON
	;
	ASIGN8.	(CANNON),TRUE
	LD	(CATWALK),A
	;
CANCON:
	;
	;	THIS PART WILL CHECK FOR SLIDES
	;
	;
	LD	A,(BOB_STATUS)
	CP	SLIDING		;IF BOB IS SLIDING, DON'T CHECK PAST HERE
	RET	Z
	;
	SUB8.   (TMPX),4	;RESTITUTION FOR SLIDES
	LD	HL,SLITAB	;GET THE ADDRESS OF THE SLIDE TABLE
NEWSENT:LD	A,(HL)		;GET THE TOP VALUE (X)
	LD	(TMP16),HL
	AND	A		;IS IT ZERO?
	JP	Z,NOMSENT	;YES..NO MORE SLIDE ENTRIES
	LD	E,A
	PCALL	SUBABS,(TMPX)
	CP	2
	JP	NC,INC2NXT
	INC	HL
	LD	A,(HL)
	LD	BC,(TMPY)
	CP	C
	JP	NZ,INC1NXT
	ASIGN16. (SLIPTR),(TMP16)
	ASIGN8.	(BOB_STATUS),SLIDING
	JP	NOMSENT
INC2NXT:INC	HL
INC1NXT:INC	HL
	INC	HL	;WE SHOULD BE AT THE NEXT ENTRY
	INC	HL
	JP	NEWSENT
NOMSENT:
;	HERE I CHECK FOR THE RADIOACTIVE WASTE ON SCREEN 6
;
	LD	A,(PRELEV)	;SEE WHAT THE PRESENT LEVEL IS
	CP	6		;IS IT THE SCREEN WITH THE RADIOACTIVE WASTE?
	JP	NZ,NOWASTE	;NO THEN NO WASTE PROBLEM, CONTINUE....
	;
	LD	A,(BOBY)
	CP	DNINWASTE	;SEE IF BELOW THE WASTE LINE..IN THE GROIN, HA!
	JR	C,NOWASTE	;NOPE....CONTINUE NORMALLY
	;
	LD	A,(BOBX)	;IF NOT IN FROM THE LEFT SIDE, THEN NO WASTE
	CP	LXINWASTE
	JP	C,NOWASTE
	;
	CP	RXINWASTE	;CHECK FROM THE RIGHT
	JP	NC,NOWASTE	;NO...THE NO PROBLEM
	;
	ASIGN8.	(RADIOACTIVE),TRUE	;AHH...THE CLUMSY KLUTZ FELL IN
NOWASTE:
;
;	This section here will look after the transporters...
;
;	First it looks to see if a key was pressed.  If the timer
;	for transporting allows, I look and see if he is trying to
;	transport from to the same level as he is currently on...
;	Then, I look and see where that level is..then, return control
;
;
TRCHK::
	ADD8.	(TMPX),4
	LD	A,(BOB_STATUS)	;DON'T LET HIM RESET THE PARAMETERS IF
	CP	TRANSPORTING	;ALREADY TRANSPORTING.
	JP	Z,IGNORT
	;
	LD	A,(TRRTAB)	;IF TRANSPORTERS NOT THERE, THEN DON'T USE EM
	AND	A
	JP	Z,NOTRAN
	LD	A,(TRTIMR)	;IS HE ALLOWED TO USE THE TRANSPORTERS NOW?
	AND	A
	JP	NZ,NOTRAN	;NO...GO ON TO NEXT CHECK.
	;
	LD	A,(TRLEV)	;GET THE LEVEL THIS JOKER WANTS
	AND	A
	JP	Z,NOTRAN	;IF A STRANGE ONE, THEN NO WAY...
	;
	LD	HL,TRRTAB+8	;GET THE ADDRESS OF THE TRANSPORTER TABLE
	LD	BC,(TRLEV)	;GET THE LEVEL
;	DEC	C		;WE HAVE TO MAKE IT REASONABLE
	LD	B,0		;CLEAR THE HIGHER BYTE
	SLA	C		;MULTIPLY IT X2
	SBC	HL,BC		;ADD IT TO THE BASE
	LD	A,(HL)		;GET THE X COORD OF THAT TRANSPORTER LEVEL
	LD	(TRGOX),A	;SAVE IT
	INC	HL		
	LD	A,(HL)		;NEXT THE Y
	LD	(TRGOY),A	;SAVE IT
	LD	BC,(TMPY)	;GET BOB'S CURRENT Y
	CP	C		;ARE DEY DA SAME?
	JP	Z,NOTRAN	;THIS DUMMY TRIED TO TRANSPORT TO THE SAME LEVEL
				;THAT HE'S ON...?
;
;	TRY THE REST OF THEM TO SEE IF HE REALLY IS ON ANY TRANSPORTER
; 
	LD	HL,TRRTAB+1	;GET THE ADDRESS OF THE TRANSPORTER TABLE
TRGLOOP:
	LD	A,(HL)		;GET THE NEXT Y
	AND	A		;IS IT A NULL ENTRY?
	JP	Z,NOTRAN	;YES...THEN NO ENTRY
	;
	LD	BC,(TMPY)	;SEE IF HE'S ON A TRANSPORTER
	CP	C		;ARE DEY EQUAL?
	JP	Z,TRYXTR
	;
NXT2TR:	INC	HL
	INC	HL
	JR	TRGLOOP
	;
NXTTR:	INC	HL
	JR	NXT2TR
TRYXTR:
	DEC	HL
	LD	(TRFRY),A
	LD	A,(HL)
	LD	(TRFRX),A
	ADD	A,TROADJ	;MAKE THE ADJUSTMENT FOR TRANSPORTERS
	LD	BC,(TMPX)	;GET THE X NOW
	CP	C		;IS HE WITHIN THE TRANSPORTER
	JR	NC,NXTTR		;NO..TRY ANOTHER
	;
	ADD	A,18		;ADD THE OTHER END TRANSPORTER ADJUSTMENT
	CP	C		;IS IT EVEN THE OTHER END?
	JR	C,NXTTR		;NO...TRY NEXT TRANSPORTER ENTRY
	;
ONTRAN:
	;	WELL WE MUST BE ON THE TRANSPORTER
	ASIGN8. (TRFRX),(BOBX)
	ASIGN8.	(TRGOX),(TRFRX)	;WE HIT THE SAME X AS WE CAME FROM
	ASIGN8.	(BOB_STATUS),TRANSPORTING
	ASIGN16. (TRENTPTR),TRRTBL
	ASIGN8.	(TRSEG),DEMATR
	ASIGN8.	(SBEAM),SDEMATR
	SUB8.	(TRGOY),1
	SUB8.	(TRFRY),1
	;
NOTRAN:	;HERE'S THE WAY OUT OF THIS ROUTINE
IGNORT:
	XOR	A
	LD	(TRLEV),A	;CLEAR THE TRANSPORTER LEVEL FLAG SINCE
				;SINCE WE HAVE ALREADY CHECKED.	
LADCHK::
	XOR	A
	LD	(NEAR_TOP),A	;IT'LL ONLY SET IF TRUE
	LD	(AT_TOP),A
	LD	(AT_BOT),A
	LD	(ON_LADDER),A
	;
	LD	HL,LADTAB	;GRAB ALL OF THE VALUES AND PUT THEM IN
LADLOP:	LD	A,(HL)		;THEIR RESPECTIVE VARIABLES.
	AND	A
	JP	Z,NOLMCH	;NO MATCH IN THE LADDER TABLE ENTRIES..
	LD	(LTOPX),A
	INC	HL
	LD	A,(HL)
	LD	(LTOPY),A
	INC	HL
	LD	A,(HL)
	LD	(LBOTX),A
	INC	HL
	LD	A,(HL)
	LD	(LBOTY),A
	;
	LD	(TMP16),HL	;SAVE THE POINTER FOR A BIT
	;
	; NOW LET'S CHECK THEM OUT....
	;
	CALL	CKATOP		;IS IT AT THE TOP....
	JP	Z,SETLTOP
	CALL	CKABOT		;OR AT THE BOTTOM....
	JP	Z,SETLBOT
	CALL	CHKNTL		;HOW ABOUT NEAR THE TOP
	JP	Z,SETNTL
	CALL	CHKBET		;SEE IF IN THE MIDDLE.
	JP	Z,SETLBET
	;
	;	IF NONE OF THESE THEN WHAT?
	;	WELL..WE TRY THE NEXT SET.
	;
	LD	HL,(TMP16)
	INC	HL
	JP	LADLOP
NOLMCH:
	;WELL SINCE THERE WAS NO MATCH, THEN DON'T DO ANYTHING.
	;
	;
	XOR	A
	LD	(LADDER),A
	JP	CONTL1
CHKNTL:
	;THIS ROUTINE WILL CHECK TO SEE IF BOB IS NEAR THE TOP
	;OF THE LADDER...
	;
	IF8.	(CATWALK),.EQ.,TRUE
	  JP	SETNZ
	ENDIF.
	LD	A,(TMPY)
	INC	A
	LD	BC,(LTOPY)
	SUB	C
	CP	08H
	JR	NC,SETNZ
	PCALL	SUBABS,(TMPX),(LTOPX)
	CP	05H
	JP	C,SETZ
	RET
SETZ:	XOR	A
	RET
SETNZ:	LD	A,01H
	AND	A
	RET
CHKBET:	
	IF8.	(LADDER),.EQ.,TRUE
	  IF8.	(TMPY),.GT.,(LTOPY)
	    IF8. (TMPY),.LT.,(LBOTY)
		PCALL SUBABS,(LTOPX),(TMPX)
		CP  05H
		JR  C,SETZ
	    ENDIF.
	  ENDIF.
	ENDIF.
	LD 	A,01H
	AND 	A
	RET
	;
CKATOP:
	LD	A,(CATWALK)
	AND	A
	JP	Z,SETNZ
	;
	PCALL	SUBABS,(TMPY),(LTOPY)
	CP	02H
	JR	NC,SETNZ
	;
	PCALL	SUBABS,(TMPX),(LTOPX)
	CP	05H
	JR	NC,SETNZ
	XOR	A
	RET
CKABOT:
	LD	A,(CATWALK)
	AND	A
	JP	Z,SETNZ
	;
	PCALL	SUBABS,(TMPY),(LBOTY)
	CP	02H
	JP	NC,SETNZ
	;
	PCALL	SUBABS,(TMPX),(LBOTX)
	CP	005H
	JP	NC,SETNZ
	;
	XOR	A
	RET
	;
SETLTOP:
	ASIGN8.	(LADDER),TRUE
	LD	(AT_TOP),A
	JR	CONTL1
	;
SETLBOT:
	ASIGN8.	(LADDER),TRUE
	LD	(AT_BOT),A
	JR	CONTL1
	;
SETNTL:
	ASIGN8.	(LADDER),TRUE
	LD	(ON_LADDER),A
	LD	(NEAR_TOP),A
	IF8.	(CATWALK),.EQ.,FALSE
	LD	A,(LTOPX)
	SUB	XADJUST
	LD	(BOBX),A
	ENDIF.
	JR	CONTL1
	;
SETLBET:
	ASIGN8.	(LADDER),TRUE
	ASIGN8.	(ON_LADDER),TRUE
	IF8.	(CATWALK),.EQ.,FALSE
	IF8.	(BOB_STATUS),.NE.,JUMPING
	  LD	A,(LBOTX)
	  SUB	XADJUST
	  LD	(BOBX),A
	ENDIF.
	ENDIF.
	;
CONTL1:
	RET
	END

