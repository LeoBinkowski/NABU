;*****************************************************************
;*                                                               *
;*    FILE NAME:        OPEN.MAC                                 *
;*                                                               *
;*    MODULE PART NO.: 73-90038680 NAME:  Miner 2049er		 *
;*                                                               *
;*    FILE DESCRIPTION:                                          *  
;*                                                               *
;*      this file does the standard opening instruction screen   *
;*      and help.                                                *
;*                                                               *
;*                                                               *
;*                                                               *
;*                                                               *
;*    PROGRAMMER: L. Binkowski, C. Chow                          *
;*                                                               *
;*    ENVIRONMENT- Development Machine: NABU 1100, MCP 1.8       *
;*                                                               *
;*               - Assembler: MACRO-80                           *
;*                                                               *
;*                                                               *
;*****************************************************************
;*                                                               *
;*    REVISION HISTORY: (current first)                          *
;*                                                               *
;*    Rev.    Date       Created By         Revision Details     *
;*    ---  ----------  ---------------  -----------------------  *
;*                                                               *
;*    04   27 JUL 84	L. Binkowski	new rev #		 *
;*								 *
;*    03   03 JUL 84	L. Binkowski	new rev #, print help	 *
;*								 *
;*    02   18 JUN 84	L. Binkowski	New rev #		 *
;*								 *
;*    01   22 MAY 84    L. Binkowski    Initial release to spec  *
;*                                                               *
;*****************************************************************
 	.Z80
;
;	THIS MODULE HANDLES THE OPENING SCREEN AND THE INSTRUCTION
;	SCREENS.
;
		.RADIX	10
		CSEG
		.XLIST
		INCLUDE COMMON.MRO
		INCLUDE STRUCT.MRO
		INCLUDE LINKTAB.EXA
		INCLUDE	ADDRESS.EQU

		EXTRN 	ENGLISH,ENG2
		EXTRN	HFLAG		
		EXTRN	PUTLOGO
		EXTRN	REVERSE
		EXTRN	PRTHLP
		.LIST
;
;DEFINE THE MESSAGE BLOCK FOR THE OPENING SCREEN
;
MESG1:		DEFMSG 15,3,'MINER 2049er'
MESG2:		DEFMSG 3,11,'READY TO GO? PRESS GO'
MESG3:		DEFMSG 3,13,'NEED HELP?   PRESS HELP'
MESG4:		DEFMSG 3,15,'NEW CHOICE?  PRESS EXIT'
MESG6:		DEFMSG 3,17,'START AGAIN? PRESS RESTART'
MESG7:		DEFMSG 3,22,'COPYRIGHT \ 1984'
MESG8:		DEFMSG 3,23,'NABU NETWORK CORP.      04'
;
;
;NOW DEFINE A DATA STRUCTURE POINTING TO THE MESSAGE BLOCKS
;
DATA:		DW MESG1, MESG2, MESG3, MESG4
		DW MESG6, MESG7, MESG8
ENDATA:
;
;DEFINE MESSAGE BLOCK FOR THE FIRST PAGE OF INSTRUCTIONS
;                           |1234567890123456789012345678|
PG1L1:		DEFMSG 3, 0,'MINER 2049er    PAGE 1 OF 9'
PG1LN2:		DEFMSG 3, 3,'IT''S 2049 AD.  BOUNTY BOB'
PG1LN3:		DEFMSG 3,5, 'IS TRACKING YUKON YOHAN IN'
PG1LN4:		DEFMSG 3,7, 'AN ABANDONED URANIUM MINE.'
PG1LN5:		DEFMSG 3,9,'CLAIM EVERY CATWALK IN A'
PG1LN6:		DEFMSG 3,11,'MINING STATION TO MOVE ON'
PG1LN7:		DEFMSG 3,13,'TO THE NEXT ONE.  CLAIM ALL'
PG1LN8:		DEFMSG 3,15,'10 STATIONS IN A ZONE TO'
PG1LN9:		DEFMSG 3,17,'MOVE ON TO THE NEXT'
PG1L10:		DEFMSG 3,19,'(DEADLIER) ZONE.'
PG1L23:		DEFMSG 3,23,'     LEAVE HELP? <GO>  ~'
INST1:		DW PG1L1,PG1LN2,PG1LN3,PG1LN4,PG1LN5,PG1LN6
		DW PG1LN7,PG1LN8,PG1LN9,PG1L10,PG1L23
ENDI1:
;
;
;DEFINE MESSAGE BLOCK FOR THE n'th PAGE OF INSTRUCTIONS
;                           |1234567890123456789012345678|
PG2L1:		DEFMSG 3, 0,'MINER 2049er    PAGE 9 OF 9'
PG2L2:		DEFMSG 3,3, '         SCORING'
PG2L3:		DEFMSG 3,5, 'GET 5 POINTS FOR EACH'
PG2L4:		DEFMSG 3,7, 'SECTION OF CATWALK CLAIMED.'
PG2L5:		DEFMSG 3,9,''
PG2L6:		DEFMSG 3,11,'    MUTANTS    80 OR 90'
PG2L7:		DEFMSG 3,13,'    OBJECTS  100 - 1100'
PG2L8:		DEFMSG 3,15,''
PG2L8A:		DEFMSG 3,17,'TIME LEFT IS ADDED TO SCORE.'
PG2L9:		DEFMSG 3,21,'BONUS LIFE AT 10,000'
PGNL23:		DEFMSG 3,23,' `   LEAVE HELP? <GO>    ~ '
INST2:		DW PG2L1,PG2L2,PG2L3,PG2L4,PG2L5,PG2L6,PG2L7,PG2L8,PG2L9,PG2L8A
		DW PGLL23
ENDI2:
;
;
;
;DEFINE MESSAGE BLOCK FOR THE n'th PAGE OF INSTRUCTIONS
;                           |1234567890123456789012345678|
PG3L1:		DEFMSG 3, 0,'MINER 2049er    PAGE 2 OF 9'
PG3L2:		DEFMSG 3,3, 'PLAY AGAINST THE CLOCK IN'
PG3L3:		DEFMSG 3,5, 'EACH STATION.  TIME LEFT IS'
PG3L4:		DEFMSG 3,7, 'ADDED TO YOUR SCORE.  START' 
PG3L5:		DEFMSG 3,9,'WITH 3 LIVES AND GET A'
PG3L6:		DEFMSG 3,11,'BONUS LIFE AT 10,000'
PG3L7:		DEFMSG 3,13,'POINTS.  CRASHING IS FATAL.'
PG3L8A:		DEFMSG 3,15,'TOUCHING A RADIOACTIVE'
PG3L8:		DEFMSG 3,17,'MUTANT OR OBJECT IS DEADLY.'
PG3L9:		DEFMSG 3,19,'LOSE A LIFE AND YOU START'
PG3L10:		DEFMSG 3,21,'OVER IN THE SAME STATION.'
INST3:		DW PG3L1,PG3L2,PG3L3,PG3L4,PG3L5,PG3L6,PG3L7,PG3L8,PG3L9
		DW PG3L8A,PG3L10,PGNL23
ENDI3:
;
;
;DEFINE MESSAGE BLOCK FOR THE n'th PAGE OF INSTRUCTIONS
;                           |1234567890123456789012345678|
PG4L1:		DEFMSG 3,0, 'MINER 2049er    PAGE 3 OF 9'
PG4L2:		DEFMSG 3,3, '   STATION 1: MINESHAFT'
PG4L3:		DEFMSG 3,5, 'USE THE JOYSTICK TO DIRECT'
PG4L4:		DEFMSG 3,7, 'BOB ALONG THE CATWALK.'
PG4L5:		DEFMSG 3,9, 'PRESS THE FIRE BUTTON TO'
PG4L6:		DEFMSG 3,11,'JUMP.  AVOID MUTANTS OR THEY'
PG4L7:		DEFMSG 3,13,'WILL DESTROY YOU. GRABBING'
PG4L8:		DEFMSG 3,15,'OBJECTS SCORES POINTS AND'
PG4L9:		DEFMSG 3,17,'MAKES MUTANTS VULNERABLE SO'
PG4L10:		DEFMSG 3,19,'YOU CAN DESTROY THEM.'
PG4L11:		DEFMSG 3,21,''
INST4:		DW PG4L1,PG4L2,PG4L3,PG4L4,PG4L5,PG4L6,PG4L7,PG4L8,PG4L9
		DW PG4L10,PG4L11,PGNL23
ENDI4:
;
;DEFINE MESSAGE BLOCK FOR THE n'th PAGE OF INSTRUCTIONS
;                           |1234567890123456789012345678|
PG5L1:		DEFMSG 3,0, 'MINER 2049er    PAGE 4 OF 9'
PG5L2:		DEFMSG 3,3, '     STATION 2: SLIDES'
PG5L3:		DEFMSG 3,5, 'WATCH OUT FOR THE SLIDES!'
PG5L4:		DEFMSG 3,7, '  STATION 3: TRANSPORTERS'
PG5L5:		DEFMSG 3,9, 'ENTER A TRANSPORTER, THEN'
PG5L6:		DEFMSG 3,11,'TYPE 1, 2, 3, OR 4 TO BEAM'
PG5L7:		DEFMSG 3,13,'UP TO THAT LEVEL.'
PG5L8:		DEFMSG 3,15,''
PG5L9:		DEFMSG 3,17,' STATIONS 4 & 5: LILLIPADS'
PG5L10:		DEFMSG 3,19,'HERE''S WHERE YOU TEST YOUR'
PG5L11:		DEFMSG 3,21,'JUMPING SKILLS!'
INST5:		DW PG5L1,PG5L2,PG5L3,PG5L4,PG5L5,PG5L6,PG5L7,PG5L8,PG5L9
		DW PG5L10,PG5L11,PGNL23
ENDI5:
;
;DEFINE MESSAGE BLOCK FOR THE n'th PAGE OF INSTRUCTIONS
;                           |1234567890123456789012345678|
PG6L1:		DEFMSG 3,0, 'MINER 2049er    PAGE 5 OF 9'
PG6L2:		DEFMSG 3,3, '         STATION 6:'
PG6L3:		DEFMSG 3,5, '     RADIOACTIVE WASTE:'
PG6L4:		DEFMSG 3,7, 'STAY ON THE MOVING'
PG6L5:		DEFMSG 3,9, 'PLATFORMS TO AVOID THE TANK'
PG6L6:		DEFMSG 3,11,'OF DEADLY DEBRIS.'
PG6L7:		DEFMSG 3,13,'         STATION 7:'
PG6L8:		DEFMSG 3,15,'   ADVANCED TRANSPORTERS:'
PG6L9:		DEFMSG 3,17,'THIS STATION COMBINES'
PG6L10:		DEFMSG 3,19,'TRANSPORTERS, SLIDES AND'
PG6L11:		DEFMSG 3,21,'MOVING PLATFORMS.'
INST6:		DW PG6L1,PG6L2,PG6L3,PG6L4,PG6L5,PG6L6,PG6L7,PG6L8,PG6L9
		DW PG6L10,PG6L11,PGNL23
ENDI6:
;
;DEFINE MESSAGE BLOCK FOR THE n'th PAGE OF INSTRUCTIONS
;                           |1234567890123456789012345678|
PG7L1:		DEFMSG 3,0, 'MINER 2049er    PAGE 6 OF 9'
PG7L2:		DEFMSG 3,3, '    STATION 8: THE LIFT'
PG7L3:		DEFMSG 3,5, ''
PG7L4:		DEFMSG 3,7, 'LEAP ON THE LIFT THEN PRESS'
PG7L5:		DEFMSG 3,9, 'THE SPACEBAR TO ACTIVATE'
PG7L6:		DEFMSG 3,11,'IT.  USE THE JOYSTICK TO'
PG7L7:		DEFMSG 3,13,'CONTROL WHERE IT GOES.'
PG7L8:		DEFMSG 3,15,''
PG7L9:		DEFMSG 3,17,'THE FIRE BUTTON OR SPACEBAR'
PG7L10:		DEFMSG 3,19,'WILL DEACTIVATE IT.'
PG7L11:		DEFMSG 3,21,''
INST7:		DW PG7L1,PG7L2,PG7L3,PG7L4,PG7L5,PG7L6,PG7L7,PG7L8,PG7L9
		DW PG7L10,PG7L11,PGNL23
ENDI7:
;
;DEFINE MESSAGE BLOCK FOR THE n'th PAGE OF INSTRUCTIONS
;                           |1234567890123456789012345678|
PG8L1:		DEFMSG 3,0, 'MINER 2049er    PAGE 7 OF 9'
PG8L2:		DEFMSG 3,3, 'STATION 9: THE PULVERIZERS'
PG8L3:		DEFMSG 3,5, 'DROP ONTO THE PLATFORM'
PG8L4:		DEFMSG 3,7, 'BENEATH A CATWALK AND MOVE'
PG8L5:		DEFMSG 3,9, 'ACROSS TO THE OTHER SIDE.'
PG8L6:		DEFMSG 3,11,'WATCH OUT FOR THE SLIDE'
PG8L7:		DEFMSG 3,13,'BETWEEN YOU AND THE NEXT'
PG8L8:		DEFMSG 3,15,'CATWALK!'
PG8L9:		DEFMSG 3,17,'TIPTOE ACROSS BOTTOM TO'
PG8L10:		DEFMSG 3,19,'AVOID THE RADIOACTIVE'
PG8L11:		DEFMSG 3,21,'PULVERIZERS.'
INST8:		DW PG8L1,PG8L2,PG8L3,PG8L4,PG8L5,PG8L6,PG8L7,PG8L8,PG8L9
		DW PG8L10,PG8L11,PGNL23
ENDI8:
;
;DEFINE MESSAGE BLOCK FOR THE n'th PAGE OF INSTRUCTIONS
;                           |1234567890123456789012345678|
PG9L1:		DEFMSG 3,0, 'MINER 2049er    PAGE 8 OF 9'
PG9L2:		DEFMSG 3,3, '   STATION 10: THE CANNON'
PG9L3:		DEFMSG 3,5, 'GRAB ONE TNT CHARGE THEN'
PG9L4:		DEFMSG 3,7, 'DROP INTO THE CANNON.'
PG9L5:		DEFMSG 3,9, 'PRESS THE FIRE BUTTON TO'
PG9L6:		DEFMSG 3,11,'SHOOT BOB UP ONE LEVEL.'
PG9L7:		DEFMSG 3,13,'TWO CHARGES SHOOT HIM UP'
PG9L8:		DEFMSG 3,15,'TWO LEVELS AND SO ON.'
PG9L9:		DEFMSG 3,17,'MOVE FAST AND AVOID THE'
PG9L10:		DEFMSG 3,19,'MUTANTS!'
PG9L11:		DEFMSG 3,21,''
INST9:		DW PG9L1,PG9L2,PG9L3,PG9L4,PG9L5,PG9L6,PG9L7,PG9L8,PG9L9
		DW PG9L10,PG9L11,PGNL23
ENDI9:
PGLL23:		DEFMSG 3,23,' `   LEAVE HELP? <GO>'
;
;
;DEFINE DATA STRUCTURE POINTING TO THE DATA STRUCTURES POINTING
;TO THE MESSAGE BLOCKS
;
INBEGIN::	DW	INST1,ENDI1,INST3,ENDI3,INST4,ENDI4
		DW	INST5,ENDI5,INST6,ENDI6,INST7,ENDI7,INST8,ENDI8
		DW	INST9,ENDI9,INST2,ENDI2
INEND::

SYM1		EQU	0B1H

PTR:	DW	00
ENDPTR: DW	00
PTRCON: DW	00
RIGHTF:	DB	0
LEFTF:	DB 	0
CHAR:	DB	0
CHOICE::	DB	0
CYCOOR::	DB	0
CXCOOR::	DB	0
OLDX::		DB	0
OLDY::		DB	0
NUMBYT::	DB	0

OPEN::	PCALL	AUDIOWR,7,3FH
	CALL	VSETG1
	SETCOLR DBLUE,WHITE	;SET FOR WHITE ON DBLUE
	PCALL VFILL,4000H,0,0
	PCALL VPTRNST,VPTRNAD
	PCALL VNAMEST,VNAMEAD
	PCALL VCOLRST,VCOLRAD
	PCALL RPATRN,ENGLISH	;READ IN TEXT CHARACER SET
	PCALL RPATRN,SPEC	;READ IN SPECIAL CHARACTERS
	PCALL VRAML8,020H,CLR,VCOLRAD	;LOAD COLOR TABLE
	PCALL VRAMLD,760,ENG2,VPTRNAD+20H*8	;LOAD IN THE COMPRESSED ENGLISH
	PCALL VRAMLD,760,ENG2,VPTRNAD+0A0H*8
	CALL	VBLKOFF
	LD	A,(HFLAG)
	AND	A		;TEST THE HELP FLAG
	JP	NZ,INSTR1

DOPEN::	CALL	FIRSCR		;DISPLAY OPENING SCREEN
	LD	A,1
	LD	(CHOICE),A	;SET CHOICE TO GO KEY
	LD	A,10
	LD	(CYCOOR),A	;SET CURSOR Y COOR
	LD	(OLDY),A	;SET OLD Y COOR	
	LD	A,15
	LD	(CXCOOR),A	;SET CURSOR X COOR
	LD	(OLDX),A	;SET OLD X COOR
	XOR	A		;CLEAR A REG
	PCALL	REVERSE,(CXCOOR),(CYCOOR),14	;REVERSE LETTERS
WAIT:	CALL	GTKEY		;WAIT FOR KEY
	CP	'V'+80H
	CALL	Z,VERSNO
	CP	0DH		;CHECK FOR GO
	JP	NZ,CC1		;NO - THEN GO TO  CHANGE CHOICE
	LD	A,(CHOICE)	;GET CHOICE
	CP	1
	JP	Z,OPTION	;JUMP TO OPTION SCREEN
	CP	2	
	JP	Z,INSTR1	;JUMP TO HELP SCREENS
	CP	4		;CHECK FOR RESTART
	JP	Z,DOPEN		;DO NOTHING
	CPMCALL	0		;DEFAULT TO CHOICE 3 WHICH IS EXIT
CC1:	CP	0E2H		;CHECK FOR CURSOR UP
	JP	NZ,CC2
	LD	HL,CYCOOR	;LOAD CURSOR Y COOR ADDRESS IN HL
	DEC	(HL)
	DEC	(HL)		;UP TWO LINES
	LD	A,(CHOICE)	
	DEC	A		;DECREMENT CHOICE COUNTER
	JP	NZ,CCFINI
	LD	A,(CYCOOR)
	ADD	A,8
	LD	(CYCOOR),A	;ADD 8 TO CURSOR Y COOR
	LD	A,4
	JP	CCFINI
CC2:	CP	0E3H		;CHECK FOR CURSOR DOWN
	JP	NZ,WAIT
	LD	HL,CYCOOR
	INC	(HL)
	INC	(HL)		;INCREMENT CURSOR Y COOR BY 2
	LD	A,(CHOICE)
	INC	A
	CP	5
	JP	NZ,CCFINI
	LD	A,(CYCOOR)
	SUB	8		;SUBTRACT 8 FROM Y COOR
	LD	(CYCOOR),A	
	LD	A,1
CCFINI:	LD	(CHOICE),A
	LD	A,1		;SET A REG TO 1
	PCALL	REVERSE,(OLDX),(OLDY),14	;CHANGE REVERSED BACK TO  NORMAL LETTERS
	LD	A,(CXCOOR)
	LD	(OLDX),A	;SET OLD X COOR TO NEW X COOR
	LD	A,(CYCOOR)
	LD	(OLDY),A	;SET OLD Y COOR TO NEW Y COOR
	XOR	A		;SET A REG TO 0
	PCALL	REVERSE,(CXCOOR),(CYCOOR),14	;REVERSE NEW LETTERS
	JP	WAIT	
;
;	INSTRUCTION SCREEN HANDLING CODE STARTS HERE
;
INSTR1::
	LD	IX,INBEGIN	;LOAD POINTER TO DATA STRUCTURES
INSTRP:
	PCALL	VFILL,0400H,020H,VNAMEAD	;FILL SCREEN WITH BLANKS
	XOR	A
	LD	(HFLAG),A	;CLEAR THE HELP FLAG
	LD	A,1
	LD	(RIGHTF),A	;SET RIGHT AND LEFT FLAGS TO 1 AT BEGINNING
	LD	(LEFTF),A
	LD	C,(IX)
	LD	B,(IX+1)	;LOAD BEGINNING POINTER TO DATA STRUCTURE
	LD	E,(IX+2)
	LD	D,(IX+3)	;LOAD END POINTER TO DATA STRUCTURE
	CALL	DRWSCN		;PUT ON PAGE OF INSTRUCTIONS
	PUSH	IX
	POP	BC		;LOAD IX IN BC
	LD	HL,INBEGIN	;LOAD BEGIN ADDRESS OF DATA STRUCTURE
	SCF
 	CCF
	SBC	HL,BC		;TEST SEE IF BEGINNING OF DATA STRUCTURE
	JR	NZ,RONLY
	LD	A,0
	LD	(LEFTF),A	;SET LEFT FLAG TO ZERO MEANING NO LEFT ARROW
RONLY:	PUSH	IX
	POP	BC		;LOAD BC WITH INDEX INTO DATA STUCTURE
	LD	HL,4
	ADD	HL,BC		;ADD 4 TO ADDRESS TO GET TO NEXT DATA STRUCTURE ADDRESS
	LD	BC,INEND	;LOAD END OF DATA STUCTURE ADDRESS
	SCF
	CCF
	SBC	HL,BC		;CHECK SEE IF END OF DATA STRUCTURE
	JR	NZ,WAITI
	LD	A,0
	LD	(RIGHTF),A	;CLEAR THE RIGHT FLAG MEANING NO RIGHT ARROW
WAITI:	CALL	GTKEY
	CP	SYM1		;DO YOU WANT TO PRINT THE SCREEN ?	
	CALL	Z,PALLH		;YES- GO PRINT THE CURRENT SCREEN			CP	0DH
	JP	Z,OPTION
	LD	(CHAR),A	;SAVE CHAR
	LD	A,(RIGHTF)
	AND	A		;IF FLAG IS 0 NO RIGHT ARROW
	JR	Z,TESTL
	LD	A,(CHAR)	;GET REPLY
	CP	0E4H		;TEST FOR ->
	JR	NZ,TESTL
	LD	BC,4
	ADD	IX,BC		;ADD 4 TO IX TO GET TO NEXT DATA STRUCTURE
	JP	INSTRP		;JUMP TO TOP
TESTL:	LD	A,(LEFTF)	
	AND	A		;CHECK SEE IF LEFT FLAG IS 0 
	JR	Z,GOKEY
	LD	A,(CHAR)
	CP	0E5H		;TEST FOR <-
	JR	NZ,GOKEY
	LD	BC,4
	PUSH	IX
	POP	HL		;LOAD IX IN HL REG
	SCF
	CCF
	SBC	HL,BC		;SUBTRACT 4 FROM IX TO GET TO NEXT DATA STRUCTURE
	PUSH	HL
	POP	IX		;RESAVE IN IX REG
	JP	INSTRP
GOKEY:	LD	A,(CHAR)
	CP	0DH			;TEST FOR <CR>
	JP	NZ,WAITI
;	LD	A,(CHOICE)
;	CP	1
;	JP	Z,OPTION
;	CP	2
;	JP	Z,INSTR1
;	CP	4
;	JP	Z,DOPEN
;	CPMCALL	0
;	JP	WAITI
OPTION:
GAME::	RET

FIRSCR:		
		PCALL	VFILL,0400H,020H,VNAMEAD	;FILL SCREEN WITH BLANKS
		PCALL PUTLOGO,02H,0H,2
;
;LOOP WHILE WRITING THE TEXT LINES ON THE SCREEN.
;
		LD BC,DATA	;SET POINTER TO DRAW..
		LD DE,ENDATA	;.. MENU PAGE
DRWSCN:: 	LD (PTR),BC
		LD (ENDPTR),DE
		REPEAT.
		LD HL,(PTR)	;GET CONTENTS OF POINTER
		LD A,(HL)
		LD C,A
		INC HL
		LD A,(HL)
		LD B,A
		LD (PTRCON),BC	;POINTS TO MESSAGE BLOCK
		PCALL PUTMSG,(PTRCON)	;PUT MESSAGE ON SCREEN
		LD HL,(PTR)
		INC HL
		INC HL
		LD (PTR),HL	;SET FOR NEXT MESSAGE BLOCK
		UNTIL16. (PTR) .EQ. (ENDPTR)	;DO IT UNTIL DONE
		RET

;
;	THIS ROUTINE CHECK KEYBOARD AND JOYSTICK FOR HELP SCREEN
;
GTKEY::
	N.DEVRDY	KEYBOARD,KEYSTROKE	;CHECK KEYBOARD
	AND	A				;IS THERE A KEY WAITING
	JP	Z,NONE				;NO - JUMP
	N.DEVIO		KEYBOARD,KEYSTROKE	;GET CHAR
	POP	HL			;POP THE RETURN ADDRESS
	CP	0ABH			;TEST FOR RESTART
	JP	Z,DOPEN
	CP	0BDH
	JP	Z,DOPEN
	CP	0EAH			;TEST FOR HELP
	JP	Z,INSTR1
;	CP	0DH			;TEST FOR GO KEY
;	JP	Z,OPTION
	PUSH	HL		;PUSH THE RETURN ADDRESS BACK ON STACK
	RET
NONE::	N.DEVRDY	KEYBOARD,JSTCK1	;CHECK JOYSTICK
	AND	A			;ANY DATA
	JR	Z,GTKEY			;NO - JUMP TO TOP
	N.DEVIO	KEYBOARD,JSTCK1		;ELSE - GET DATA
	BIT	4,A		;CHECK FOR GO KEY
	JR	Z,J2		
	LD	A,0DH		
	RET
J2:	BIT	0,A		;CHECK FOR LEFT PAGE
	JR	Z,J3
	LD	A,0E5H
	RET
J3:	BIT	2,A		;CHECK FOR RIGHT PAGE
	JR	Z,J4
	LD	A,0E4H
	RET
J4:	BIT	3,A		;CHECK FOR CURSOR UP
	JR	Z,J5
	LD	A,0E2H
	RET
J5:	BIT	1,A		;CHECK FOR CUSOR DOWN
	JP	Z,GTKEY
	LD	A,0E3H
	RET
VERSNO:	PCALL	PUTMSG,VERMSG
	XOR	A
	RET
VERMSG:	DEFMSG	3,23,'AS OF JULY 27, 1984          '
;
;	THIS ROUTINE HANDLES THE PRINTING OF THE HELP SCREENS
;
PALLH::
	PUSH	IX		; SAVE CURRENT INDEX
	LD	IX,INBEGIN	;LOAD POINTER TO DATA STRUCTURES
	XOR	A
	LD	(NUMBYT),A	;CLEAR NUMBER BYTE FOR PTHLP
PALLH0:
;
;	CHECKING TO SEE IF END OF INTRUCTION SCREENS
;
	PUSH	IX
	POP	HL		;LOAD HL WITH INDEX INTO DATA STUCTURE
	LD	BC,INEND	;LOAD END OF DATA STUCTURE ADDRESS
	AND	A		;CLEAR CARRY FLAG	
	SBC	HL,BC		;CHECK SEE IF END OF DATA STRUCTURE
	JR	Z,PALLH2	;YES - JUMP
	PCALL	VFILL,400H,20H,VNAMEAD
	
;
;	SETTING UP REGISTERS FOR DRWSCN
;
	LD	C,(IX)
	LD	B,(IX+1)	;LOAD BEGINNING POINTER TO DATA STRUCTURE
	LD	E,(IX+2)
	LD	D,(IX+3)	;LOAD END POINTER TO DATA STRUCTURE
	CALL	DRWSCN		;PUT ON PAGE OF INSTRUCTIONS
	PUSH	IX
	POP	BC		;LOAD BC WITH INDEX INTO DATA STUCTURE
	LD	HL,4
	ADD	HL,BC		;ADD 4 TO ADDRESS TO GET TO NEXT DATA STRUCTURE ADDRESS
	LD	BC,INEND	;LOAD END OF DATA STUCTURE ADDRESS
	AND	A
	SBC	HL,BC		;CHECK SEE IF END OF DATA STRUCTURE
	JR	NZ,PH1
	XOR	A		;LOAD ZERO INTO A FOR <FF> TO PRINTER
	JR	PH2
PH1:	LD	A,(NUMBYT)	
	XOR	1		;FLIP VALUE OF NUMBYTE
	LD	(NUMBYT),A
PH2:	LD	C,A
	CALL	PRTHLP		; PRINT THE CURRENT SCREEN
	JR	C,PALLH2	; PRINT HAS BEEN CANCELLED (C IS SET)
	LD	BC,4
	ADD	IX,BC		; GET NEXT SCREEN
	JR	PALLH0
;
PALLH2:	POP	IX		; SET OLD INDEX
	PCALL	VFILL,400H,20H,VNAMEAD
	LD	C,(IX)
	LD	B,(IX+1)	; BEGINNING POINTER TO CURRENT DATA STRUCTURE
	LD	E,(IX+2)
	LD	D,(IX+3)	;LOAD END POINTER TO DATA STRUCTURE
	CALL	DRWSCN
	XOR	A		; ERASE THE LAST COMMAND...
	RET
;
CLR::	DB	0F4H,0F4H,0F4H,0F4H,0F4H,0F4H,0F4H,0F4H
	DB	0F4H,0F4H,0F4H,0F4H,0F4H,0F4H,0F4H,0F4H
	DB	0F4H,0F4H,0F4H,0F4H,04FH,04FH,04FH,04FH
	DB	04FH,04FH,04FH,04FH,04FH,04FH,04FH,04FH
;
SPEC::
;
           DB 005H
;
;
 DB 03CH,000H,00CH,018H,030H,030H,018H,00CH,000H
 DB 03EH,000H,030H,018H,00CH,00CH,018H,030H,000H
 DB 07BH,008H,010H,020H,040H,020H,010H,008H,000H
 DB 07CH,000H,018H,018H,018H,018H,018H,018H,000H
 DB 07DH,040H,020H,010H,008H,010H,020H,040H,000H

	END
