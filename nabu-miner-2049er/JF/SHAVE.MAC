	.Z80
	.RADIX	10
	.XLIST
	INCLUDE	COMMON.MRO
	INCLUDE	STRUCT.MRO
	INCLUDE	LINKTAB.EXA
	INCLUDE	CLKAT.MRO
	INCLUDE PRINT.MRO
	INCLUDE ARITH.MRO
	.LIST
DECLARES::	
	FIN::	DB	0,'PATTFILEMAC'
		DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	FOUT::	DB	0,'SHAVFILEMAC'
		DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DB1::	DB	0
	DB::	DB	'DB'
	BK::	DB	' '    
	BUFF::	DS	128
	EBUF::	DB	'$'
	P::	DB	0
	BP::	DW	0
	BVAL::	DW	0
	X::	DB	0
	Y::	DB	0
	LEN::	DB	0
	FIVE::	DB	5
	HUGE::	DS	4000H
	ENDH::	DW	0
	HP::	DW	0
	CHAR::	DB	0
	DD::	DB	'D'
	BB::	DB	'B'
	
START::
;	LD	SP,(6)	;SET STACK POINTER
;	N.LINKIO LNKTB	;INITIALIZE OPERATING SYSTEM
	POOP 'AT START'
	LD C,1AH	;SET DMA ADDRESS
	LD DE,BUFF	;  TO BUFF
	CALL 5
	LD C,13H	;DELETE 
	LD DE,FOUT	;  FOUT IF THERE
	CALL 5
	LD A,0FFH
	LD C,0FH	;OPEN
	LD DE,FIN	;  FIN
	CALL 5
	LD (X),A
	IF8. (X),.EQ.,0FFH
		POOP 'FIN NOT FOUND'
		ENDIF.
	IF8. (X),.LT.,04H
		POOP 'FIN OK'
		ENDIF.
	LD C,16H	;CREATE
	LD DE,FOUT	;  FOUT
	LD A,0FFH
	CALL 5
	LD (X),A
	IF8. (X),.EQ.,0FFH
		POOP 'FOUT NOT CREATED'
		ENDIF.
	ASIGN16. (HP),HUGE
INLOOP::
	LD C,14H	;READ SEQ
	LD DE,FIN	;  FIN
	CALL 5
	CP 0		;IF NOT ZERO EOF
	JP NZ,FIXLOOP	;  SO GO FIXLOOP
	LD BC,128	;LOAD COUNTER FOR 128 MOVES
	LD HL,BUFF	;ADDRESS OF FROM BUFF
	LD DE,(HP)	;ADDRESS OF TO BUFF
	LDIR		;MOVE FROM BUFF TO (HP) FOR 128
	LD DE,128	;INCREMENT HUGE POINTER
	LD HL,(HP)	;  BY NEXT
	ADD HL,DE	;    128
	LD (HP),HL	;	AND PUT BACK IN (HP)
	JP INLOOP	;KEEP GOING TILL EOF
FIXLOOP::
	LD DE,128	;ADD LAST 128 TO
	LD HL,(HP)	;  LAST HUGE POINTER
	ADD HL,DE	;    AND PUT
	LD (ENDH),HL	;	IN ENDH TO MARK END OF HUGE
	LD DE,HUGE	;RESET 
	LD (HP),DE	;  (HP)
	WHILE16. (HP),.LT.,(ENDH)
		CALL GETC	;GET CHAR
		IF8. (CHAR),.EQ.,(DD)	;WE GOT A D
			CALL GETC	;GET CHAR
			IF8. (CHAR),.EQ.,(BB)	;WE GOT A B
				CALL GETC	;GET CHAR
				IF8. (CHAR),.EQ.,(BK)	;WE GOT DBb, SO FIX 
					CALL FIX
					ENDIF.	;IF (BK) 
				ENDIF.	;IF (BB) 
			ENDIF.	;IF (DD)
		ENDW.	;(HP) LT (ENDH)

WR::
	LD DE,HUGE	;RESET 
	LD (HP),DE	;  (HP)
	WHILE16. (HP),.LT.,(ENDH)
		LD BC,128	;LOAD COUNTER FOR 128 MOVES
		LD HL,(HP)	;ADDRESS OF FROM BUFF
		LD DE,BUFF	;ADDRESS OF TO BUFF
		LDIR		;MOVE FROM (HP) TO BUFF FOR 128
		LD DE,128	;INCREMENT HUGE POINTER
		LD HL,(HP)	;  BY NEXT
		ADD HL,DE	;    128
		LD (HP),HL	;	AND PUT BACK IN (HP)
		IF16. (HP),.LT.,(ENDH)
			LD C,09H	;PRINT TO SCREEN
			LD DE,BUFF	;
			CALL 5
			ENDIF.
		LD C,15H	;WRITE
		LD DE,FOUT	;  TO FOUT SEQUENTIAL
		CALL 5
		ENDW.	;(HP) LT ENDH
DONE::
	LD C,10H	;CLOSE 
	LD DE,FOUT	;  FOUT
	LD A,0FFH
	CALL 5
	LD (X),A
	IF8. (X),.EQ.,0FFH
		POOP 'FOUT NOT CLOSED PROPERLY'
		ENDIF.
	POOP 'ALL DONE'
	LD C,0
	CALL 5

;-----------------------------------------------------------------------------
GETC::
;GET CHARACTER POINTED TO BY HP AND INCREMENT HP
	LD HL,(HP)	;CURRENT ADDRESS POINTED TO BY HP
	LD A,(HL)	;VALUE AT ADDRESS POINTED TO BY HP (CHAR)
	LD (CHAR),A	;PUT IT IN CHAR FOR CONVENIENCE
	INC HL		;INCREMENT
	LD (HP),HL	;  (HP)	
	RET

FIX::
	IF8. (DB1),.EQ.,1	;NOT FIRST DB
		ASIGN8. (Y),5	;ERASE NEXT 5 CHARS
		ENDIF.
	IF8. (DB1),.EQ.,0
		SUB16. (HP),3		;POINT TO D OF DB
		ASIGN8. (Y),7		;IF DB1 IS 0, ERASE DB ALSO
		ASIGN8. (DB1),1		;FLAG THAT WE DONE IT
		ENDIF.
	ASIGN8. (X),0
	WHILE8. (X),.LT.,(Y)
		LD HL,(HP)	;ADDRESS TO WHICH HP POINTS
		LD A,(BK)	;LOAD A BLANK
		LD (HL),A	;PUT IT IN ADDRESS TO WHICH HP POINTS
		CALL GETC	;JUST TO INCREMENT (HP)
		LD A,(X)	;INC
		INC A		;  X
		LD (X),A	;   AND PUT BACK
		ENDW.
	RET

B10::
	LD A,0
	LD (X),A
	WHILE8. (X),.LT.,10
		LD HL,BUFF
		LD DE,(P)
		LD A,0
		LD D,A
		ADD HL,DE
		LD A,(BK)
		LD (HL),A
		LD A,(P)
		INC A
		LD (P),A
		LD A,(X)
		INC A
		LD (X),A
		ENDW.
	RET

B5::
	IF8. (P),.GT.,120
		RET
		ENDIF.
	ADD8. (P),3
	LD A,0
	LD (X),A
	WHILE8. (X),.LT.,5
		LD HL,BUFF
		LD DE,(P)
		LD A,0
		LD D,A
		ADD HL,DE
		LD A,(BK)
		LD (HL),A
		LD A,(P)
		INC A
		LD (P),A
		LD A,(X)
		INC A
		LD (X),A
		ENDW.

	RET

	END

